package com.burst.sdk.library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.win32.StdCallLibrary;

/**
 * JNA Wrapper for library <b>HWPuSDK</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */

public interface HWPuSDKLibrary extends StdCallLibrary {
	public static final String JNA_LIBRARY_NAME = "HWPuSDK";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance("hw/"+HWPuSDKLibrary.JNA_LIBRARY_NAME);
	public static final HWPuSDKLibrary INSTANCE = Native.load(HWPuSDKLibrary.JNA_LIBRARY_NAME, HWPuSDKLibrary.class);

	public static class UCHAR extends PointerType {
		public UCHAR(Pointer address) {
			super(address);
		}
		public UCHAR() {
			super();
		}
	};
	public static class HWND extends PointerType {
		public HWND(Pointer address) {
			super(address);
		}
		public HWND() {
			super();
		}
	};

	//SDK回调函数
	public static interface FGetAlarmInfoCallBack extends StdCallCallback {
		public int invoke(Pointer pointer);
	}

	//注冊回调函数
	boolean IVS_PU_EventStatesCallBack(FGetAlarmInfoCallBack fGetAlarmInfoCallBack);

	//释放SDK资源
	boolean IVS_PU_Cleanup();

}
