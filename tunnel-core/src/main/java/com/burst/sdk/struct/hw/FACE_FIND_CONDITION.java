package com.burst.sdk.struct.hw;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class FACE_FIND_CONDITION extends Structure {
	/**
	 * \u59d3\u540d<br>
	 * C type : CHAR[(64)]
	 */
	public byte[] szName = new byte[64];
	/**
	 * \u6027\u522b<br>
	 * C type : PU_GENDER_E
	 */
	public int enGender;
	/**
	 * \u7701\u7ea7<br>
	 * C type : CHAR[(16)]
	 */
	public byte[] szProvince = new byte[16];
	/**
	 * \u5730\u5e02<br>
	 * C type : CHAR[(16)]
	 */
	public byte[] szCity = new byte[16];
	/**
	 * \u8bc1\u4ef6\u7c7b\u578b<br>
	 * C type : PU_CARDTYPE_E
	 */
	public int enCardType;
	/**
	 * \u8bc1\u4ef6\u53f7<br>
	 * C type : CHAR[(32)]
	 */
	public byte[] szCardID = new byte[32];
	/**
	 * \u751f\u65e5\u5f00\u59cb<br>
	 * C type : CHAR[(32)]
	 */
	public byte[] szBirthdayStart = new byte[32];
	/**
	 * \u751f\u65e5\u7ed3\u675f<br>
	 * C type : CHAR[(32)]
	 */
	public byte[] szBirthdayEnd = new byte[32];
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public FACE_FIND_CONDITION() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szName", "enGender", "szProvince", "szCity", "enCardType", "szCardID", "szBirthdayStart", "szBirthdayEnd", "szReserve");
	}
	/**
	 * @param szName \u59d3\u540d<br>
	 * C type : CHAR[(64)]<br>
	 * @param enGender \u6027\u522b<br>
	 * C type : PU_GENDER_E<br>
	 * @param szProvince \u7701\u7ea7<br>
	 * C type : CHAR[(16)]<br>
	 * @param szCity \u5730\u5e02<br>
	 * C type : CHAR[(16)]<br>
	 * @param enCardType \u8bc1\u4ef6\u7c7b\u578b<br>
	 * C type : PU_CARDTYPE_E<br>
	 * @param szCardID \u8bc1\u4ef6\u53f7<br>
	 * C type : CHAR[(32)]<br>
	 * @param szBirthdayStart \u751f\u65e5\u5f00\u59cb<br>
	 * C type : CHAR[(32)]<br>
	 * @param szBirthdayEnd \u751f\u65e5\u7ed3\u675f<br>
	 * C type : CHAR[(32)]<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public FACE_FIND_CONDITION(byte szName[], int enGender, byte szProvince[], byte szCity[], int enCardType, byte szCardID[], byte szBirthdayStart[], byte szBirthdayEnd[], byte szReserve[]) {
		super();
		if ((szName.length != this.szName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szName = szName;
		this.enGender = enGender;
		if ((szProvince.length != this.szProvince.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szProvince = szProvince;
		if ((szCity.length != this.szCity.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCity = szCity;
		this.enCardType = enCardType;
		if ((szCardID.length != this.szCardID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCardID = szCardID;
		if ((szBirthdayStart.length != this.szBirthdayStart.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szBirthdayStart = szBirthdayStart;
		if ((szBirthdayEnd.length != this.szBirthdayEnd.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szBirthdayEnd = szBirthdayEnd;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public FACE_FIND_CONDITION(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends FACE_FIND_CONDITION implements Structure.ByReference {
		
	};
	public static class ByValue extends FACE_FIND_CONDITION implements Structure.ByValue {
		
	};
}
