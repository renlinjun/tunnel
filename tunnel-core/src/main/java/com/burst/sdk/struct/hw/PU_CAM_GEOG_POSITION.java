package com.burst.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_CAM_GEOG_POSITION extends Structure {
	/** \u901a\u9053\u53f7 */
	public NativeLong ulChnID;
	/**
	 * \u65b9\u4f4d\u89d2<br>
	 * C type : CHAR[(15)]
	 */
	public byte[] szAzimuth = new byte[15];
	/**
	 * \u4fef\u4ef0\u89d2<br>
	 * C type : CHAR[(15)]
	 */
	public byte[] szPitch = new byte[15];
	/**
	 * \u7ecf\u5ea6<br>
	 * C type : CHAR[(15)]
	 */
	public byte[] szLongitude = new byte[15];
	/**
	 * \u7eac\u5ea6<br>
	 * C type : CHAR[(15)]
	 */
	public byte[] szLatitude = new byte[15];
	/**
	 * szReserved[0]\u4ee3\u8868\u83b7\u53d6\u7ecf\u7eac\u5ea6\u65b9\u5f0f; szReserved[1] bit0\u5bf9\u5e94nHeight, bit1\u5bf9\u5e94fAzimuth, bit2\u5bf9\u5e94fPitch, bit3\u5bf9\u5e94dLongitude\uff0cbit4\u5bf9\u5e94dLatitude<br>
	 * C type : CHAR[32]
	 */
	public byte[] szReserved = new byte[32];
	public PU_CAM_GEOG_POSITION() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulChnID", "szAzimuth", "szPitch", "szLongitude", "szLatitude", "szReserved");
	}
	/**
	 * @param ulChnID \u901a\u9053\u53f7<br>
	 * @param szAzimuth \u65b9\u4f4d\u89d2<br>
	 * C type : CHAR[(15)]<br>
	 * @param szPitch \u4fef\u4ef0\u89d2<br>
	 * C type : CHAR[(15)]<br>
	 * @param szLongitude \u7ecf\u5ea6<br>
	 * C type : CHAR[(15)]<br>
	 * @param szLatitude \u7eac\u5ea6<br>
	 * C type : CHAR[(15)]<br>
	 * @param szReserved szReserved[0]\u4ee3\u8868\u83b7\u53d6\u7ecf\u7eac\u5ea6\u65b9\u5f0f; szReserved[1] bit0\u5bf9\u5e94nHeight, bit1\u5bf9\u5e94fAzimuth, bit2\u5bf9\u5e94fPitch, bit3\u5bf9\u5e94dLongitude\uff0cbit4\u5bf9\u5e94dLatitude<br>
	 * C type : CHAR[32]
	 */
	public PU_CAM_GEOG_POSITION(NativeLong ulChnID, byte szAzimuth[], byte szPitch[], byte szLongitude[], byte szLatitude[], byte szReserved[]) {
		super();
		this.ulChnID = ulChnID;
		if ((szAzimuth.length != this.szAzimuth.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szAzimuth = szAzimuth;
		if ((szPitch.length != this.szPitch.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szPitch = szPitch;
		if ((szLongitude.length != this.szLongitude.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szLongitude = szLongitude;
		if ((szLatitude.length != this.szLatitude.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szLatitude = szLatitude;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_CAM_GEOG_POSITION(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_CAM_GEOG_POSITION implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_CAM_GEOG_POSITION implements Structure.ByValue {
		
	};
}
