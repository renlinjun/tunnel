package com.burst.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_DEC_CHANNEL_PORT_MAP extends Structure {
	/** \u901a\u9053\u53f7 */
	public NativeLong ulChannelID;
	/**
	 * \u7aef\u53e3\u7c7b\u578b<br>
	 * C type : PU_PORT_TYPE_E
	 */
	public int enPortType;
	/** \u7aef\u53e3\u7d22\u5f15 */
	public NativeLong ulPortIndex;
	/** \u901a\u9053\u6240\u5728\u7684\u5e03\u5c40\u7d22\u5f15 */
	public NativeLong ulLayoutIndex;
	public PU_DEC_CHANNEL_PORT_MAP() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulChannelID", "enPortType", "ulPortIndex", "ulLayoutIndex");
	}
	/**
	 * @param ulChannelID \u901a\u9053\u53f7<br>
	 * @param enPortType \u7aef\u53e3\u7c7b\u578b<br>
	 * C type : PU_PORT_TYPE_E<br>
	 * @param ulPortIndex \u7aef\u53e3\u7d22\u5f15<br>
	 * @param ulLayoutIndex \u901a\u9053\u6240\u5728\u7684\u5e03\u5c40\u7d22\u5f15
	 */
	public PU_DEC_CHANNEL_PORT_MAP(NativeLong ulChannelID, int enPortType, NativeLong ulPortIndex, NativeLong ulLayoutIndex) {
		super();
		this.ulChannelID = ulChannelID;
		this.enPortType = enPortType;
		this.ulPortIndex = ulPortIndex;
		this.ulLayoutIndex = ulLayoutIndex;
	}
	public PU_DEC_CHANNEL_PORT_MAP(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_DEC_CHANNEL_PORT_MAP implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_DEC_CHANNEL_PORT_MAP implements Structure.ByValue {
		
	};
}
