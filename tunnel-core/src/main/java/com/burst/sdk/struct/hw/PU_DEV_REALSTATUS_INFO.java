package com.burst.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_DEV_REALSTATUS_INFO extends Structure {
	/** \u6e29\u5ea6 */
	public NativeLong lCurretTemp;
	/**
	 * CPU\u3001\u5185\u5b58<br>
	 * C type : PU_SYS_STATUS_INFO_S
	 */
	public PU_SYS_STATUS_INFO stSysStatusInfo;
	/**
	 * SDCard \u78c1\u76d8\u72b6\u6001<br>
	 * C type : PU_HARD_DISK_STATE_S
	 */
	public PU_HARD_DISK_STATE stDiskState;
	/**
	 * \u5730\u7406\u4f4d\u7f6e<br>
	 * C type : PU_CAM_GEOG_POSITION_S
	 */
	public PU_CAM_GEOG_POSITION stCamGeogPostion;
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_DEV_REALSTATUS_INFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("lCurretTemp", "stSysStatusInfo", "stDiskState", "stCamGeogPostion", "szReserved");
	}
	/**
	 * @param lCurretTemp \u6e29\u5ea6<br>
	 * @param stSysStatusInfo CPU\u3001\u5185\u5b58<br>
	 * C type : PU_SYS_STATUS_INFO_S<br>
	 * @param stDiskState SDCard \u78c1\u76d8\u72b6\u6001<br>
	 * C type : PU_HARD_DISK_STATE_S<br>
	 * @param stCamGeogPostion \u5730\u7406\u4f4d\u7f6e<br>
	 * C type : PU_CAM_GEOG_POSITION_S<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_DEV_REALSTATUS_INFO(NativeLong lCurretTemp, PU_SYS_STATUS_INFO stSysStatusInfo, PU_HARD_DISK_STATE stDiskState, PU_CAM_GEOG_POSITION stCamGeogPostion, byte szReserved[]) {
		super();
		this.lCurretTemp = lCurretTemp;
		this.stSysStatusInfo = stSysStatusInfo;
		this.stDiskState = stDiskState;
		this.stCamGeogPostion = stCamGeogPostion;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_DEV_REALSTATUS_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_DEV_REALSTATUS_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_DEV_REALSTATUS_INFO implements Structure.ByValue {
		
	};
}
