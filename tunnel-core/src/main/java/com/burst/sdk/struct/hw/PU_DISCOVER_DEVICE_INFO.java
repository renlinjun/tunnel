package com.burst.sdk.struct.hw;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_DISCOVER_DEVICE_INFO extends Structure {
	/**
	 * \u8bbe\u5907MAC\u5730\u5740<br>
	 * C type : CHAR[30]
	 */
	public byte[] szDeviceMac = new byte[30];
	/**
	 * \u8bbe\u5907\u578b\u53f7<br>
	 * C type : CHAR[32]
	 */
	public byte[] szDeviceType = new byte[32];
	/**
	 * \u8bbe\u5907\u7248\u672c\u53f7<br>
	 * C type : CHAR[32]
	 */
	public byte[] szDeviceVersion = new byte[32];
	/**
	 * \u8bbe\u5907\u540d\u79f0<br>
	 * C type : CHAR[32]
	 */
	public byte[] szDeviceName = new byte[32];
	/**
	 * \u8bbe\u5907IP<br>
	 * C type : CHAR[16]
	 */
	public byte[] szDeviceIp = new byte[16];
	/**
	 * \u8bbe\u5907\u63a9\u7801<br>
	 * C type : CHAR[16]
	 */
	public byte[] szDeviceMask = new byte[16];
	/**
	 * \u8bbe\u5907\u7f51\u5173<br>
	 * C type : CHAR[16]
	 */
	public byte[] szDeviceGateway = new byte[16];
	/**
	 * SN\u53f7<br>
	 * C type : CHAR[32]
	 */
	public byte[] szSerialNumber = new byte[32];
	/** DHCP\u662f\u5426\u4f7f\u80fd 0\uff1a\u672a\u4f7f\u80fd  ,  1\uff1a\u4f7f\u80fd ,  2\uff1a\u672a\u77e5\uff0c\u4e3a\u517c\u5bb9\u8001\u7248\u672c */
	public int uDhcpEnable;
	/**
	 * \u9884\u7559<br>
	 * C type : CHAR[32]
	 */
	public byte[] szReserved = new byte[32];
	public PU_DISCOVER_DEVICE_INFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szDeviceMac", "szDeviceType", "szDeviceVersion", "szDeviceName", "szDeviceIp", "szDeviceMask", "szDeviceGateway", "szSerialNumber", "uDhcpEnable", "szReserved");
	}
	public PU_DISCOVER_DEVICE_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_DISCOVER_DEVICE_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_DISCOVER_DEVICE_INFO implements Structure.ByValue {
		
	};
}
