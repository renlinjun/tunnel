package com.burst.sdk.struct.hw;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_GUARD_STATE extends Structure {
	/**
	 * \u955c\u5934\u5e03\u9632\u72b6\u6001,ulDeviceId=0\u4e3a\u65e0\u6548<br>
	 * C type : PU_GUARD_PARA_S[4]
	 */
	public PU_GUARD_PARA[] szChannelStateList = new PU_GUARD_PARA[4];
	/**
	 * \u8f93\u5165\u8bbe\u5907\u544a\u8b66\u72b6\u6001,ulDeviceId=0\u4e3a\u65e0\u6548<br>
	 * C type : PU_GUARD_PARA_S[8]
	 */
	public PU_GUARD_PARA[] szInputStateList = new PU_GUARD_PARA[8];
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public PU_GUARD_STATE() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szChannelStateList", "szInputStateList", "szReserve");
	}
	/**
	 * @param szChannelStateList \u955c\u5934\u5e03\u9632\u72b6\u6001,ulDeviceId=0\u4e3a\u65e0\u6548<br>
	 * C type : PU_GUARD_PARA_S[4]<br>
	 * @param szInputStateList \u8f93\u5165\u8bbe\u5907\u544a\u8b66\u72b6\u6001,ulDeviceId=0\u4e3a\u65e0\u6548<br>
	 * C type : PU_GUARD_PARA_S[8]<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public PU_GUARD_STATE(PU_GUARD_PARA szChannelStateList[], PU_GUARD_PARA szInputStateList[], byte szReserve[]) {
		super();
		if ((szChannelStateList.length != this.szChannelStateList.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szChannelStateList = szChannelStateList;
		if ((szInputStateList.length != this.szInputStateList.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szInputStateList = szInputStateList;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public PU_GUARD_STATE(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_GUARD_STATE implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_GUARD_STATE implements Structure.ByValue {
		
	};
}
