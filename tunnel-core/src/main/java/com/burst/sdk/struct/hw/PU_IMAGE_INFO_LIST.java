package com.burst.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public abstract class PU_IMAGE_INFO_LIST extends Structure {
	/** \u6293\u62cd\u65f6\u95f4 */
	public NativeLong ulSnapTime;
	/** \u56fe\u7247\u5927\u5c0f */
	public NativeLong ulContentSize;
	/**
	 * \u56fe\u7247\u540d<br>
	 * C type : CHAR[(64)]
	 */
	public byte[] szContentID = new byte[64];
	/**
	 * \u5173\u8054\u5f55\u50cf\u4fe1\u606f(\u4ec5\u7535\u5b50\u8b66\u5bdf\u8bbe\u5907\u6709\u6548,\u4e14IVS_PU_GetITSSnapshotPicList\u6709\u6307\u5b9a\u8fdd\u7ae0\u7c7b\u578b)<br>
	 * C type : PU_ASSOCIATE_RECORD_INFO_S
	 */
	public PU_ASSOCIATE_RECORD_INFO stRecordInfo;
	/** Conversion Error : sizeof(PU_ASSOCIATE_RECORD_INFO) */
	public PU_IMAGE_INFO_LIST() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulSnapTime", "ulContentSize", "szContentID", "stRecordInfo");
	}
	/**
	 * @param ulSnapTime \u6293\u62cd\u65f6\u95f4<br>
	 * @param ulContentSize \u56fe\u7247\u5927\u5c0f<br>
	 * @param szContentID \u56fe\u7247\u540d<br>
	 * C type : CHAR[(64)]<br>
	 * @param stRecordInfo \u5173\u8054\u5f55\u50cf\u4fe1\u606f(\u4ec5\u7535\u5b50\u8b66\u5bdf\u8bbe\u5907\u6709\u6548,\u4e14IVS_PU_GetITSSnapshotPicList\u6709\u6307\u5b9a\u8fdd\u7ae0\u7c7b\u578b)<br>
	 * C type : PU_ASSOCIATE_RECORD_INFO_S
	 */
	public PU_IMAGE_INFO_LIST(NativeLong ulSnapTime, NativeLong ulContentSize, byte szContentID[], PU_ASSOCIATE_RECORD_INFO stRecordInfo) {
		super();
		this.ulSnapTime = ulSnapTime;
		this.ulContentSize = ulContentSize;
		if ((szContentID.length != this.szContentID.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szContentID = szContentID;
		this.stRecordInfo = stRecordInfo;
	}
	public PU_IMAGE_INFO_LIST(Pointer peer) {
		super(peer);
	}
	public static abstract class ByReference extends PU_IMAGE_INFO_LIST implements Structure.ByReference {
		
	};
	public static abstract class ByValue extends PU_IMAGE_INFO_LIST implements Structure.ByValue {
		
	};
}
