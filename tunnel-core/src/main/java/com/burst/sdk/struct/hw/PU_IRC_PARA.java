package com.burst.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_IRC_PARA extends Structure {
	/**
	 * \u65e5\u591c\u6a21\u5f0f<br>
	 * C type : PU_IRC_MODE_E
	 */
	public int enIRCMode;
	/** \u5f69\u8f6c\u9ed1\u7075\u654f\u5ea6 */
	public NativeLong ulDayToNightThreshold;
	/** \u9ed1\u8f6c\u5f69\u7075\u654f\u5ea6 */
	public NativeLong ulNightToDayThreshold;
	/** \u5916\u90e8\u544a\u8b66\u89e6\u53d1\u8f6c\u9ed1\u767d0\uff1a\u4f4e\u7535\u5e73 1\uff1a\u9ad8\u7535\u5e73 */
	public NativeLong ulSwitchLevel;
	/**
	 * \u65e5\u591c\u6a21\u5f0f\u89e6\u53d1\u65b9\u5f0f\uff0c\u9ed8\u8ba4IRC_LUM_TRIGGER<br>
	 * C type : PU_IRC_TRIGGER_MODE_E
	 */
	public int enIRCutSwitchMode;
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public PU_IRC_PARA() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("enIRCMode", "ulDayToNightThreshold", "ulNightToDayThreshold", "ulSwitchLevel", "enIRCutSwitchMode", "szReserve");
	}
	/**
	 * @param enIRCMode \u65e5\u591c\u6a21\u5f0f<br>
	 * C type : PU_IRC_MODE_E<br>
	 * @param ulDayToNightThreshold \u5f69\u8f6c\u9ed1\u7075\u654f\u5ea6<br>
	 * @param ulNightToDayThreshold \u9ed1\u8f6c\u5f69\u7075\u654f\u5ea6<br>
	 * @param ulSwitchLevel \u5916\u90e8\u544a\u8b66\u89e6\u53d1\u8f6c\u9ed1\u767d0\uff1a\u4f4e\u7535\u5e73 1\uff1a\u9ad8\u7535\u5e73<br>
	 * @param enIRCutSwitchMode \u65e5\u591c\u6a21\u5f0f\u89e6\u53d1\u65b9\u5f0f\uff0c\u9ed8\u8ba4IRC_LUM_TRIGGER<br>
	 * C type : PU_IRC_TRIGGER_MODE_E<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public PU_IRC_PARA(int enIRCMode, NativeLong ulDayToNightThreshold, NativeLong ulNightToDayThreshold, NativeLong ulSwitchLevel, int enIRCutSwitchMode, byte szReserve[]) {
		super();
		this.enIRCMode = enIRCMode;
		this.ulDayToNightThreshold = ulDayToNightThreshold;
		this.ulNightToDayThreshold = ulNightToDayThreshold;
		this.ulSwitchLevel = ulSwitchLevel;
		this.enIRCutSwitchMode = enIRCutSwitchMode;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public PU_IRC_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_IRC_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_IRC_PARA implements Structure.ByValue {
		
	};
}
