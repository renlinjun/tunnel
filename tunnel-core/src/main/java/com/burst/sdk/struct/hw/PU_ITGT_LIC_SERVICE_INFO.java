package com.burst.sdk.struct.hw;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_ITGT_LIC_SERVICE_INFO extends Structure {
	/** license \u91cc\u9762\u7684\u667a\u80fd\u7b97\u6cd5\u4e2a\u6570 */
	public int uiLicItgtNum;
	/**
	 * license\u6587\u4ef6\u521b\u5efa\u65e5\u671f<br>
	 * C type : CHAR[72]
	 */
	public byte[] szLicCreatDate = new byte[72];
	/**
	 * \u670d\u52a1\u5e74\u4efd<br>
	 * C type : CHAR[256]
	 */
	public byte[] szLicServiceAge = new byte[256];
	/**
	 * \u667a\u80fd\u7b97\u6cd5license\u63a7\u5236\u4fe1\u606f<br>
	 * C type : PU_ITGT_LIC_CONTROL_INFO_S[16]
	 */
	public PU_ITGT_LIC_CONTROL_INFO[] astLicControlInfo = new PU_ITGT_LIC_CONTROL_INFO[16];
	public PU_ITGT_LIC_SERVICE_INFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("uiLicItgtNum", "szLicCreatDate", "szLicServiceAge", "astLicControlInfo");
	}
	/**
	 * @param uiLicItgtNum license \u91cc\u9762\u7684\u667a\u80fd\u7b97\u6cd5\u4e2a\u6570<br>
	 * @param szLicCreatDate license\u6587\u4ef6\u521b\u5efa\u65e5\u671f<br>
	 * C type : CHAR[72]<br>
	 * @param szLicServiceAge \u670d\u52a1\u5e74\u4efd<br>
	 * C type : CHAR[256]<br>
	 * @param astLicControlInfo \u667a\u80fd\u7b97\u6cd5license\u63a7\u5236\u4fe1\u606f<br>
	 * C type : PU_ITGT_LIC_CONTROL_INFO_S[16]
	 */
	public PU_ITGT_LIC_SERVICE_INFO(int uiLicItgtNum, byte szLicCreatDate[], byte szLicServiceAge[], PU_ITGT_LIC_CONTROL_INFO astLicControlInfo[]) {
		super();
		this.uiLicItgtNum = uiLicItgtNum;
		if ((szLicCreatDate.length != this.szLicCreatDate.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szLicCreatDate = szLicCreatDate;
		if ((szLicServiceAge.length != this.szLicServiceAge.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szLicServiceAge = szLicServiceAge;
		if ((astLicControlInfo.length != this.astLicControlInfo.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astLicControlInfo = astLicControlInfo;
	}
	public PU_ITGT_LIC_SERVICE_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_ITGT_LIC_SERVICE_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_ITGT_LIC_SERVICE_INFO implements Structure.ByValue {
		
	};
}
