package com.burst.sdk.struct.hw;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_SDK_TLS_CERT_UPLOAD extends Structure {
	/** C type : CHAR[512] */
	public byte[] szCaFile = new byte[512];
	/** C type : CHAR[512] */
	public byte[] szCertFile = new byte[512];
	/** C type : CHAR[512] */
	public byte[] szKeyFile = new byte[512];
	/**
	 * \u79c1\u94a5\u6587\u4ef6\u7684\u52a0\u5bc6Pwd<br>
	 * C type : CHAR[(64 + 4)]
	 */
	public byte[] szPassword = new byte[64 + 4];
	public PU_SDK_TLS_CERT_UPLOAD() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szCaFile", "szCertFile", "szKeyFile", "szPassword");
	}
	/**
	 * @param szCaFile C type : CHAR[512]<br>
	 * @param szCertFile C type : CHAR[512]<br>
	 * @param szKeyFile C type : CHAR[512]<br>
	 * @param szPassword \u79c1\u94a5\u6587\u4ef6\u7684\u52a0\u5bc6Pwd<br>
	 * C type : CHAR[(64 + 4)]
	 */
	public PU_SDK_TLS_CERT_UPLOAD(byte szCaFile[], byte szCertFile[], byte szKeyFile[], byte szPassword[]) {
		super();
		if ((szCaFile.length != this.szCaFile.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCaFile = szCaFile;
		if ((szCertFile.length != this.szCertFile.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCertFile = szCertFile;
		if ((szKeyFile.length != this.szKeyFile.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szKeyFile = szKeyFile;
		if ((szPassword.length != this.szPassword.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szPassword = szPassword;
	}
	public PU_SDK_TLS_CERT_UPLOAD(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_SDK_TLS_CERT_UPLOAD implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_SDK_TLS_CERT_UPLOAD implements Structure.ByValue {
		
	};
}
