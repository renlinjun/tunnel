package com.burst.sdk.struct.hw;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_SNMP_TRAP_INFO extends Structure {
	/**
	 * \u63a5\u6536\u65b9IP<br>
	 * C type : CHAR[16]
	 */
	public byte[] szTrapPeerIp = new byte[16];
	/** \u63a5\u6536\u65b9\u7aef\u53e3 */
	public short usTrapPeerPort;
	/**
	 * \u7248\u672c<br>
	 * C type : PU_SNMP_VERSION_TYPE_E
	 */
	public int enSnmpVer;
	/**
	 * \u9274\u6743\u4fe1\u606f<br>
	 * C type : PU_SNMP_AUTH_INFO_U
	 */
	public PU_SNMP_AUTH_INFO unSnmmpAuthInfo;
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_SNMP_TRAP_INFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szTrapPeerIp", "usTrapPeerPort", "enSnmpVer", "unSnmmpAuthInfo", "szReserved");
	}
	/**
	 * @param szTrapPeerIp \u63a5\u6536\u65b9IP<br>
	 * C type : CHAR[16]<br>
	 * @param usTrapPeerPort \u63a5\u6536\u65b9\u7aef\u53e3<br>
	 * @param enSnmpVer \u7248\u672c<br>
	 * C type : PU_SNMP_VERSION_TYPE_E<br>
	 * @param unSnmmpAuthInfo \u9274\u6743\u4fe1\u606f<br>
	 * C type : PU_SNMP_AUTH_INFO_U<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_SNMP_TRAP_INFO(byte szTrapPeerIp[], short usTrapPeerPort, int enSnmpVer, PU_SNMP_AUTH_INFO unSnmmpAuthInfo, byte szReserved[]) {
		super();
		if ((szTrapPeerIp.length != this.szTrapPeerIp.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szTrapPeerIp = szTrapPeerIp;
		this.usTrapPeerPort = usTrapPeerPort;
		this.enSnmpVer = enSnmpVer;
		this.unSnmmpAuthInfo = unSnmmpAuthInfo;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_SNMP_TRAP_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_SNMP_TRAP_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_SNMP_TRAP_INFO implements Structure.ByValue {
		
	};
}
