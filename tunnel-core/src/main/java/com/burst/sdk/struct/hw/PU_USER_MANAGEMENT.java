package com.burst.sdk.struct.hw;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_USER_MANAGEMENT extends Structure {
	/**
	 * \u64cd\u4f5c\u4eba\u540d\u79f0<br>
	 * C type : CHAR[32]
	 */
	public byte[] szOperaterUserName = new byte[32];
	/**
	 * \u64cd\u4f5c\u7c7b\u578b<br>
	 * C type : PU_OPT_TYPE_E
	 */
	public int enOptType;
	/**
	 * \u64cd\u4f5c\u4fe1\u606f<br>
	 * C type : PU_USER_INFO_S
	 */
	public PU_USER_INFO stUserInfo;
	/**
	 * \u9a8c\u8bc1Pwd<br>
	 * C type : CHAR[(64 + 4)]
	 */
	public byte[] szVerifyPwd = new byte[64 + 4];
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_USER_MANAGEMENT() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szOperaterUserName", "enOptType", "stUserInfo", "szVerifyPwd", "szReserved");
	}
	/**
	 * @param szOperaterUserName \u64cd\u4f5c\u4eba\u540d\u79f0<br>
	 * C type : CHAR[32]<br>
	 * @param enOptType \u64cd\u4f5c\u7c7b\u578b<br>
	 * C type : PU_OPT_TYPE_E<br>
	 * @param stUserInfo \u64cd\u4f5c\u4fe1\u606f<br>
	 * C type : PU_USER_INFO_S<br>
	 * @param szVerifyPwd \u9a8c\u8bc1Pwd<br>
	 * C type : CHAR[(64 + 4)]<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_USER_MANAGEMENT(byte szOperaterUserName[], int enOptType, PU_USER_INFO stUserInfo, byte szVerifyPwd[], byte szReserved[]) {
		super();
		if ((szOperaterUserName.length != this.szOperaterUserName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOperaterUserName = szOperaterUserName;
		this.enOptType = enOptType;
		this.stUserInfo = stUserInfo;
		if ((szVerifyPwd.length != this.szVerifyPwd.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szVerifyPwd = szVerifyPwd;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_USER_MANAGEMENT(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_USER_MANAGEMENT implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_USER_MANAGEMENT implements Structure.ByValue {
		
	};
}
