package com.burst.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SMTP_CONFIG_INFO extends Structure {
	/**
	 * @see PU_SMTP_MAIL_TYPE<br>
	 * \u6807\u5fd7\u672c\u6b21\u662f\u4e0b\u53d1\u53c2\u6570or\u6d4b\u8bd5\u6536\u4ef6\u4eba,0:\u6d4b\u8bd5,1,<br>
	 * C type : PU_SMTP_MAIL_TYPE
	 */
	public int enMailType;
	/** \u542f\u7528\u6807\u5fd7 */
	public boolean bSMTPEnable;
	/**
	 * \u53d1\u4ef6\u4eba\u7528\u6237\u540d<br>
	 * C type : CHAR[(32 + 4)]
	 */
	public byte[] szSenderName = new byte[32 + 4];
	/**
	 * \u53d1\u4ef6\u4eba\u90ae\u7bb1<br>
	 * C type : CHAR[128]
	 */
	public byte[] szSenderMail = new byte[128];
	/**
	 * \u670d\u52a1\u5668IP\u5730\u5740<br>
	 * C type : CHAR[16]
	 */
	public byte[] szServerIP = new byte[16];
	/** \u670d\u52a1\u5668\u7aef\u53e3 */
	public NativeLong ulServerPort;
	/**
	 * \u52a0\u5bc6\u7c7b\u578b<br>
	 * C type : PU_SMTP_SECURITY_TYPE_E
	 */
	public int enSecurityType;
	/** \u542f\u7528\u56fe\u7247\u9644\u4ef6 */
	public boolean bPicEnable;
	/** \u56fe\u7247\u9644\u4ef6\u6570\u91cf */
	public NativeLong ulPicNum;
	/** \u6293\u62cd\u95f4\u9694 */
	public NativeLong ulSnapTimeInterval;
	/** \u542f\u7528\u670d\u52a1\u5668\u8ba4\u8bc1 */
	public boolean bServerCrtEnable;
	/**
	 * \u670d\u52a1\u5668\u7528\u6237\u540d<br>
	 * C type : CHAR[(32 + 4)]
	 */
	public byte[] szServerName = new byte[32 + 4];
	/**
	 * \u670d\u52a1\u5668Pwd<br>
	 * C type : CHAR[(64 + 4)]
	 */
	public byte[] szPassword = new byte[64 + 4];
	/** \u6536\u4ef6\u4eba\u6570\u76ee */
	public NativeLong ulReceiverNum;
	/**
	 * \u6536\u4ef6\u4eba\u5217\u8868<br>
	 * C type : PU_SMTP_RECVEIVER_INFO_S[3]
	 */
	public PU_SMTP_RECVEIVER_INFO[] szReceiverInfo = new PU_SMTP_RECVEIVER_INFO[3];
	/**
	 * \u9884\u7559\u5b57\u6bb5<br>
	 * C type : CHAR[64]
	 */
	public byte[] szReserved = new byte[64];
	public SMTP_CONFIG_INFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("enMailType", "bSMTPEnable", "szSenderName", "szSenderMail", "szServerIP", "ulServerPort", "enSecurityType", "bPicEnable", "ulPicNum", "ulSnapTimeInterval", "bServerCrtEnable", "szServerName", "szPassword", "ulReceiverNum", "szReceiverInfo", "szReserved");
	}
	public SMTP_CONFIG_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends SMTP_CONFIG_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends SMTP_CONFIG_INFO implements Structure.ByValue {
		
	};
}
