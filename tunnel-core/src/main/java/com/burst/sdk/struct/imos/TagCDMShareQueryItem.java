package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
import static com.burst.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagCDMShareQueryItem extends Structure {
	/** C type : CHAR[IMOS_DEVICE_CODE_LEN] */
	public byte[] szCDMCode = new byte[IMOS_DEVICE_CODE_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szCDMName = new byte[IMOS_NAME_LEN];
	/** C type : int */
	public int ulTotalCapacity;
	/** C type : int */
	public int ulStorageTimes;
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public TagCDMShareQueryItem() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szCDMCode", "szCDMName", "ulTotalCapacity", "ulStorageTimes", "szReserve");
	}
	/**
	 * @param szCDMCode C type : CHAR[IMOS_DEVICE_CODE_LEN]<br>
	 * @param szCDMName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param ulTotalCapacity C type : int<br>
	 * @param ulStorageTimes C type : int<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public TagCDMShareQueryItem(byte szCDMCode[], byte szCDMName[], int ulTotalCapacity, int ulStorageTimes, byte szReserve[]) {
		super();
		if ((szCDMCode.length != this.szCDMCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCDMCode = szCDMCode;
		if ((szCDMName.length != this.szCDMName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCDMName = szCDMName;
		this.ulTotalCapacity = ulTotalCapacity;
		this.ulStorageTimes = ulStorageTimes;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public TagCDMShareQueryItem(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagCDMShareQueryItem implements Structure.ByReference {
		
	};
	public static class ByValue extends TagCDMShareQueryItem implements Structure.ByValue {
		
	};
}
