package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import static  com.burst.sdk.constanst.IMOSDefLibrary.*;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagIMOSAnalyseSizeFilter extends Structure {
	/** C type : int */
	public int bEnable;
	/** C type : CHAR[IMOS_COORDINATE_STR_LEN_16] */
	public byte[] szAreaMin = new byte[IMOS_COORDINATE_STR_LEN_16];
	/** C type : CHAR[IMOS_COORDINATE_STR_LEN_16] */
	public byte[] szAreaMax = new byte[IMOS_COORDINATE_STR_LEN_16];
	/** C type : CHAR[128] */
	public byte[] szReserve = new byte[128];
	public TagIMOSAnalyseSizeFilter() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("bEnable", "szAreaMin", "szAreaMax", "szReserve");
	}
	/**
	 * @param bEnable C type : int<br>
	 * @param szAreaMin C type : CHAR[IMOS_COORDINATE_STR_LEN_16]<br>
	 * @param szAreaMax C type : CHAR[IMOS_COORDINATE_STR_LEN_16]<br>
	 * @param szReserve C type : CHAR[128]
	 */
	public TagIMOSAnalyseSizeFilter(int bEnable, byte szAreaMin[], byte szAreaMax[], byte szReserve[]) {
		super();
		this.bEnable = bEnable;
		if ((szAreaMin.length != this.szAreaMin.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szAreaMin = szAreaMin;
		if ((szAreaMax.length != this.szAreaMax.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szAreaMax = szAreaMax;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public TagIMOSAnalyseSizeFilter(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagIMOSAnalyseSizeFilter implements Structure.ByReference {
		
	};
	public static class ByValue extends TagIMOSAnalyseSizeFilter implements Structure.ByValue {
		
	};
}
