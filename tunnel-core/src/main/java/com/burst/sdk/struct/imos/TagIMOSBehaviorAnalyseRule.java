package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagIMOSBehaviorAnalyseRule extends Structure {
	/** C type : int */
	public int ulIndex;
	/** C type : int */
	public int bEnable;
	/** C type : IMOS_ANALYSE_SIZE_FILTER_S */
	public TagIMOSAnalyseSizeFilter stFilter;
	/** C type : int */
	public int ulBehaviorType;
	/** C type : IMOS_BEHAVIOR_U */
	public TagIMOSBehavior unBehavior;
	/** C type : CHAR[128] */
	public byte[] szReserve = new byte[128];
	public TagIMOSBehaviorAnalyseRule() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulIndex", "bEnable", "stFilter", "ulBehaviorType", "unBehavior", "szReserve");
	}
	/**
	 * @param ulIndex C type : int<br>
	 * @param bEnable C type : int<br>
	 * @param stFilter C type : IMOS_ANALYSE_SIZE_FILTER_S<br>
	 * @param ulBehaviorType C type : int<br>
	 * @param unBehavior C type : IMOS_BEHAVIOR_U<br>
	 * @param szReserve C type : CHAR[128]
	 */
	public TagIMOSBehaviorAnalyseRule(int ulIndex, int bEnable, TagIMOSAnalyseSizeFilter stFilter, int ulBehaviorType, TagIMOSBehavior unBehavior, byte szReserve[]) {
		super();
		this.ulIndex = ulIndex;
		this.bEnable = bEnable;
		this.stFilter = stFilter;
		this.ulBehaviorType = ulBehaviorType;
		this.unBehavior = unBehavior;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public TagIMOSBehaviorAnalyseRule(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagIMOSBehaviorAnalyseRule implements Structure.ByReference {
		
	};
	public static class ByValue extends TagIMOSBehaviorAnalyseRule implements Structure.ByValue {
		
	};
}
