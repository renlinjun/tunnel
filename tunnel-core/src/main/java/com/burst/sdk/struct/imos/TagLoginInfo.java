package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

import static com.burst.sdk.constanst.IMOSDefLibrary.IMOS_DOMAIN_CODE_LEN;
import static com.burst.sdk.constanst.IMOSDefLibrary.IMOS_NAME_LEN;

/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagLoginInfo extends Structure {
	/** C type : USER_LOGIN_ID_INFO_S */
	public TagUserLoginIDInfo stUserLoginIDInfo = new TagUserLoginIDInfo.ByValue();
	/** C type : CHAR[IMOS_DOMAIN_CODE_LEN] */
	public byte[] szOrgCode = new byte[IMOS_DOMAIN_CODE_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szDomainName = new byte[IMOS_NAME_LEN];
	/** C type : int */
	public int ulDomainType;
	public TagLoginInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("stUserLoginIDInfo", "szOrgCode", "szDomainName", "ulDomainType");
	}
	/**
	 * @param stUserLoginIDInfo C type : USER_LOGIN_ID_INFO_S<br>
	 * @param szOrgCode C type : CHAR[IMOS_DOMAIN_CODE_LEN]<br>
	 * @param szDomainName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param ulDomainType C type : int
	 */
	public TagLoginInfo(TagUserLoginIDInfo stUserLoginIDInfo, byte szOrgCode[], byte szDomainName[], int ulDomainType) {
		super();
		this.stUserLoginIDInfo = stUserLoginIDInfo;
		if ((szOrgCode.length != this.szOrgCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgCode = szOrgCode;
		if ((szDomainName.length != this.szDomainName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDomainName = szDomainName;
		this.ulDomainType = ulDomainType;
	}
	public TagLoginInfo(Pointer peer) {
		super(peer);
	}



	public static class ByReference extends TagLoginInfo implements Structure.ByReference {
		public TagUserLoginIDInfo.ByReference getTagUserLoginIDInfoReference() {
			stUserLoginIDInfo.getPointer();
			return new TagUserLoginIDInfo.ByReference(stUserLoginIDInfo.getPointer());
		}
	};
	public static class ByValue extends TagLoginInfo implements Structure.ByValue {
		
	};
}
