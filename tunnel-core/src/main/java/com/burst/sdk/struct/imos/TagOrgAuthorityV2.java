package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;

import static com.burst.sdk.constanst.IMOSDefLibrary.IMOS_AUTHORITY_MAX_NUM_EX;

/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagOrgAuthorityV2 extends Structure {
	/** C type : AUTHORITY_ITEM_S[IMOS_AUTHORITY_MAX_NUM_EX] */
	public TagAuthorityItem[] astAuthorities = new TagAuthorityItem[IMOS_AUTHORITY_MAX_NUM_EX];
	/** C type : int */
	public int ulAuthCount;
	public TagOrgAuthorityV2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("astAuthorities", "ulAuthCount");
	}
	/**
	 * @param astAuthorities C type : AUTHORITY_ITEM_S[IMOS_AUTHORITY_MAX_NUM_EX]<br>
	 * @param ulAuthCount C type : int
	 */
	public TagOrgAuthorityV2(TagAuthorityItem astAuthorities[], int ulAuthCount) {
		super();
		if ((astAuthorities.length != this.astAuthorities.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astAuthorities = astAuthorities;
		this.ulAuthCount = ulAuthCount;
	}
	public TagOrgAuthorityV2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagOrgAuthorityV2 implements Structure.ByReference {
		
	};
	public static class ByValue extends TagOrgAuthorityV2 implements Structure.ByValue {
		
	};
}
