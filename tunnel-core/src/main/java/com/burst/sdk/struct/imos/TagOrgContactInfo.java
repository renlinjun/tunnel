package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
import static com.burst.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagOrgContactInfo extends Structure {
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szOrgContszt = new byte[IMOS_NAME_LEN];
	/** C type : CHAR[IMOS_MOBILE_LEN] */
	public byte[] szOrgMobile = new byte[IMOS_MOBILE_LEN];
	/** C type : CHAR[IMOS_STRING_LEN_256] */
	public byte[] szOrgAddr = new byte[IMOS_STRING_LEN_256];
	/** C type : CHAR[IMOS_PHONE_LEN] */
	public byte[] szOrgFax = new byte[IMOS_PHONE_LEN];
	/** C type : CHAR[IMOS_PHONE_LEN] */
	public byte[] szOrgTel = new byte[IMOS_PHONE_LEN];
	/** C type : CHAR[IMOS_MAIL_LEN] */
	public byte[] szOrgEmail = new byte[IMOS_MAIL_LEN];
	/** C type : CHAR[IMOS_MAIL_CODE_LEN] */
	public byte[] szOrgPostalCode = new byte[IMOS_MAIL_CODE_LEN];
	public TagOrgContactInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szOrgContszt", "szOrgMobile", "szOrgAddr", "szOrgFax", "szOrgTel", "szOrgEmail", "szOrgPostalCode");
	}
	/**
	 * @param szOrgContszt C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param szOrgMobile C type : CHAR[IMOS_MOBILE_LEN]<br>
	 * @param szOrgAddr C type : CHAR[IMOS_STRING_LEN_256]<br>
	 * @param szOrgFax C type : CHAR[IMOS_PHONE_LEN]<br>
	 * @param szOrgTel C type : CHAR[IMOS_PHONE_LEN]<br>
	 * @param szOrgEmail C type : CHAR[IMOS_MAIL_LEN]<br>
	 * @param szOrgPostalCode C type : CHAR[IMOS_MAIL_CODE_LEN]
	 */
	public TagOrgContactInfo(byte szOrgContszt[], byte szOrgMobile[], byte szOrgAddr[], byte szOrgFax[], byte szOrgTel[], byte szOrgEmail[], byte szOrgPostalCode[]) {
		super();
		if ((szOrgContszt.length != this.szOrgContszt.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgContszt = szOrgContszt;
		if ((szOrgMobile.length != this.szOrgMobile.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgMobile = szOrgMobile;
		if ((szOrgAddr.length != this.szOrgAddr.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgAddr = szOrgAddr;
		if ((szOrgFax.length != this.szOrgFax.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgFax = szOrgFax;
		if ((szOrgTel.length != this.szOrgTel.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgTel = szOrgTel;
		if ((szOrgEmail.length != this.szOrgEmail.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgEmail = szOrgEmail;
		if ((szOrgPostalCode.length != this.szOrgPostalCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgPostalCode = szOrgPostalCode;
	}
	public TagOrgContactInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagOrgContactInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends TagOrgContactInfo implements Structure.ByValue {
		
	};
}
