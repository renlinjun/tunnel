package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;

import static com.burst.sdk.constanst.IMOSDefLibrary.IMOS_OSD_NAME_MAXNUM;

/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagOsdInfo extends Structure {
	/** C type : OSD_TIME_S */
	public TagOsdTime stOSDTime;
	/** C type : OSD_NAME_S[IMOS_OSD_NAME_MAXNUM] */
	public TagOsdName[] astOSDName = new TagOsdName[IMOS_OSD_NAME_MAXNUM];
	/** C type : OSD_MASK_AREA_S */
	public TagOsdMaskArea stOSDMaskArea;
	public TagOsdInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("stOSDTime", "astOSDName", "stOSDMaskArea");
	}
	/**
	 * @param stOSDTime C type : OSD_TIME_S<br>
	 * @param astOSDName C type : OSD_NAME_S[IMOS_OSD_NAME_MAXNUM]<br>
	 * @param stOSDMaskArea C type : OSD_MASK_AREA_S
	 */
	public TagOsdInfo(TagOsdTime stOSDTime, TagOsdName astOSDName[], TagOsdMaskArea stOSDMaskArea) {
		super();
		this.stOSDTime = stOSDTime;
		if ((astOSDName.length != this.astOSDName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astOSDName = astOSDName;
		this.stOSDMaskArea = stOSDMaskArea;
	}
	public TagOsdInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagOsdInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends TagOsdInfo implements Structure.ByValue {
		
	};
}
