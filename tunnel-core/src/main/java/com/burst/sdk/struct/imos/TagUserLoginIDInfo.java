package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;

import static com.burst.sdk.constanst.IMOSDefLibrary.IMOS_IPADDR_LEN;
import static com.burst.sdk.constanst.IMOSDefLibrary.IMOS_RES_CODE_LEN;
import static com.burst.sdk.constanst.IMOSDefLibrary.IMOS_USER_CODE_LEN;

/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagUserLoginIDInfo extends Structure {
	/** C type : CHAR[IMOS_USER_CODE_LEN] */
	public byte[] szUserCode = new byte[IMOS_USER_CODE_LEN];
	/** C type : CHAR[IMOS_RES_CODE_LEN] */
	public byte[] szUserLoginCode = new byte[IMOS_RES_CODE_LEN];
	/** C type : CHAR[IMOS_IPADDR_LEN] */
	public byte[] szUserIpAddress = new byte[IMOS_IPADDR_LEN];
	public TagUserLoginIDInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szUserCode", "szUserLoginCode", "szUserIpAddress");
	}
	/**
	 * @param szUserCode C type : CHAR[IMOS_USER_CODE_LEN]<br>
	 * @param szUserLoginCode C type : CHAR[IMOS_RES_CODE_LEN]<br>
	 * @param szUserIpAddress C type : CHAR[IMOS_IPADDR_LEN]
	 */
	public TagUserLoginIDInfo(byte szUserCode[], byte szUserLoginCode[], byte szUserIpAddress[]) {
		super();
		if ((szUserCode.length != this.szUserCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szUserCode = szUserCode;
		if ((szUserLoginCode.length != this.szUserLoginCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szUserLoginCode = szUserLoginCode;
		if ((szUserIpAddress.length != this.szUserIpAddress.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szUserIpAddress = szUserIpAddress;
	}
	public TagUserLoginIDInfo(Pointer peer) {
		super(peer);
		read();
	}
	public static class ByReference extends TagUserLoginIDInfo implements Structure.ByReference {
		//TODO 结构体指针引用，暂且试试
		public ByReference(Pointer pointer) {
			super(pointer);
		}
		public ByReference() {
			super();
		}
	};
	public static class ByValue extends TagUserLoginIDInfo implements Structure.ByValue {
		
	};
}
