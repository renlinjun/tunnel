package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagSerialQueryItem extends Structure {
	/** C type : int */
	public int ulSerialIndex;
	/** C type : int */
	public int ulSerialType;
	/** C type : int */
	public int ulSerialMode;
	public tagSerialQueryItem() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulSerialIndex", "ulSerialType", "ulSerialMode");
	}
	/**
	 * @param ulSerialIndex C type : int<br>
	 * @param ulSerialType C type : int<br>
	 * @param ulSerialMode C type : int
	 */
	public tagSerialQueryItem(int ulSerialIndex, int ulSerialType, int ulSerialMode) {
		super();
		this.ulSerialIndex = ulSerialIndex;
		this.ulSerialType = ulSerialType;
		this.ulSerialMode = ulSerialMode;
	}
	public tagSerialQueryItem(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagSerialQueryItem implements Structure.ByReference {
		
	};
	public static class ByValue extends tagSerialQueryItem implements Structure.ByValue {
		
	};
}
