package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
import static com.burst.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagShareMapBase extends Structure {
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szMapCode = new byte[IMOS_CODE_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szMapName = new byte[IMOS_NAME_LEN];
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szParentOrgCode = new byte[IMOS_CODE_LEN];
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szMapShareCode = new byte[IMOS_CODE_LEN];
	public tagShareMapBase() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szMapCode", "szMapName", "szParentOrgCode", "szMapShareCode");
	}
	/**
	 * @param szMapCode C type : CHAR[IMOS_CODE_LEN]<br>
	 * @param szMapName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param szParentOrgCode C type : CHAR[IMOS_CODE_LEN]<br>
	 * @param szMapShareCode C type : CHAR[IMOS_CODE_LEN]
	 */
	public tagShareMapBase(byte szMapCode[], byte szMapName[], byte szParentOrgCode[], byte szMapShareCode[]) {
		super();
		if ((szMapCode.length != this.szMapCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szMapCode = szMapCode;
		if ((szMapName.length != this.szMapName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szMapName = szMapName;
		if ((szParentOrgCode.length != this.szParentOrgCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szParentOrgCode = szParentOrgCode;
		if ((szMapShareCode.length != this.szMapShareCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szMapShareCode = szMapShareCode;
	}
	public tagShareMapBase(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagShareMapBase implements Structure.ByReference {
		
	};
	public static class ByValue extends tagShareMapBase implements Structure.ByValue {
		
	};
}
