package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import static com.burst.sdk.constanst.IMOSDefLibrary.*;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagShareTollgateQueryItem extends Structure {
	/** C type : int */
	public int bIsShared;
	/** C type : int */
	public int ulTollgateType;
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szTollgateCode = new byte[IMOS_CODE_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szTollgateName = new byte[IMOS_NAME_LEN];
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szTollgateShareCode = new byte[IMOS_CODE_LEN];
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szParOrgCode = new byte[IMOS_CODE_LEN];
	public tagShareTollgateQueryItem() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("bIsShared", "ulTollgateType", "szTollgateCode", "szTollgateName", "szTollgateShareCode", "szParOrgCode");
	}
	/**
	 * @param bIsShared C type : int<br>
	 * @param ulTollgateType C type : int<br>
	 * @param szTollgateCode C type : CHAR[IMOS_CODE_LEN]<br>
	 * @param szTollgateName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param szTollgateShareCode C type : CHAR[IMOS_CODE_LEN]<br>
	 * @param szParOrgCode C type : CHAR[IMOS_CODE_LEN]
	 */
	public tagShareTollgateQueryItem(int bIsShared, int ulTollgateType, byte szTollgateCode[], byte szTollgateName[], byte szTollgateShareCode[], byte szParOrgCode[]) {
		super();
		this.bIsShared = bIsShared;
		this.ulTollgateType = ulTollgateType;
		if ((szTollgateCode.length != this.szTollgateCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szTollgateCode = szTollgateCode;
		if ((szTollgateName.length != this.szTollgateName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szTollgateName = szTollgateName;
		if ((szTollgateShareCode.length != this.szTollgateShareCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szTollgateShareCode = szTollgateShareCode;
		if ((szParOrgCode.length != this.szParOrgCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szParOrgCode = szParOrgCode;
	}
	public tagShareTollgateQueryItem(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagShareTollgateQueryItem implements Structure.ByReference {
		
	};
	public static class ByValue extends tagShareTollgateQueryItem implements Structure.ByValue {
		
	};
}
