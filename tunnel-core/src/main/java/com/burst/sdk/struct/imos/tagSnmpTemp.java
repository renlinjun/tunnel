package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
import static com.burst.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagSnmpTemp extends Structure {
	/** C type : CHAR[IMOS_STRING_LEN_64] */
	public byte[] szSnmpTemplateId = new byte[IMOS_STRING_LEN_64];
	/** C type : int */
	public int ulSnmpPort;
	/** C type : int */
	public int ulTimeout;
	/** C type : int */
	public int ulRetries;
	/** C type : int */
	public int ulSnmp_version;
	/** C type : int */
	public int ulTemplateType;
	/** C type : CHAR[IMOS_STRING_LEN_64] */
	public byte[] szContextName = new byte[IMOS_STRING_LEN_64];
	/** C type : CHAR[IMOS_STRING_LEN_64] */
	public byte[] szSecurityName = new byte[IMOS_STRING_LEN_64];
	/** C type : SNMP_SPECIAL_S */
	public tagSnmpSpecial stSnmpSpecial;
	/** C type : CHANNEL_TEMPLET_BASIC_S */
	public TagChannelTempletBasic stTempBasicInfo;
	public tagSnmpTemp() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szSnmpTemplateId", "ulSnmpPort", "ulTimeout", "ulRetries", "ulSnmp_version", "ulTemplateType", "szContextName", "szSecurityName", "stSnmpSpecial", "stTempBasicInfo");
	}
	public tagSnmpTemp(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagSnmpTemp implements Structure.ByReference {
		
	};
	public static class ByValue extends tagSnmpTemp implements Structure.ByValue {
		
	};
}
