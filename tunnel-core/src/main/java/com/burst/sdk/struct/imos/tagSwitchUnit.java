package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;

import static com.burst.sdk.constanst.IMOSDefLibrary.*;

/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagSwitchUnit extends Structure {
	/** C type : CHAR[IMOS_RES_CODE_LEN] */
	public byte[] szCameraCode = new byte[IMOS_RES_CODE_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szCameraName = new byte[IMOS_NAME_LEN];
	/** C type : int */
	public int ulSequence;
	/** C type : int */
	public int ulInterval;
	public tagSwitchUnit() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szCameraCode", "szCameraName", "ulSequence", "ulInterval");
	}
	/**
	 * @param szCameraCode C type : CHAR[IMOS_RES_CODE_LEN]<br>
	 * @param szCameraName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param ulSequence C type : int<br>
	 * @param ulInterval C type : int
	 */
	public tagSwitchUnit(byte szCameraCode[], byte szCameraName[], int ulSequence, int ulInterval) {
		super();
		if ((szCameraCode.length != this.szCameraCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCameraCode = szCameraCode;
		if ((szCameraName.length != this.szCameraName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCameraName = szCameraName;
		this.ulSequence = ulSequence;
		this.ulInterval = ulInterval;
	}
	public tagSwitchUnit(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagSwitchUnit implements Structure.ByReference {
		
	};
	public static class ByValue extends tagSwitchUnit implements Structure.ByValue {
		
	};
}
