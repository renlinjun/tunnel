package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
import static com.burst.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagUserQueryItemV2 extends Structure {
	/** C type : USER_QUERY_ITEM_S */
	public tagUserQueryItem stUserItemInfoV1;
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szOrgCode = new byte[IMOS_CODE_LEN];
	/** C type : CHAR[192] */
	public byte[] szReserve = new byte[192];
	public tagUserQueryItemV2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("stUserItemInfoV1", "szOrgCode", "szReserve");
	}
	/**
	 * @param stUserItemInfoV1 C type : USER_QUERY_ITEM_S<br>
	 * @param szOrgCode C type : CHAR[IMOS_CODE_LEN]<br>
	 * @param szReserve C type : CHAR[192]
	 */
	public tagUserQueryItemV2(tagUserQueryItem stUserItemInfoV1, byte szOrgCode[], byte szReserve[]) {
		super();
		this.stUserItemInfoV1 = stUserItemInfoV1;
		if ((szOrgCode.length != this.szOrgCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgCode = szOrgCode;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public tagUserQueryItemV2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagUserQueryItemV2 implements Structure.ByReference {
		
	};
	public static class ByValue extends tagUserQueryItemV2 implements Structure.ByValue {
		
	};
}
