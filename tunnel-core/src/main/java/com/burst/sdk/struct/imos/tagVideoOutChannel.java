package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
import static  com.burst.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagVideoOutChannel extends Structure {
	/** C type : int */
	public int ulVoutChannelindex;
	/** C type : CHAR[IMOS_DESC_LEN] */
	public byte[] szVoutChannelDesc = new byte[IMOS_DESC_LEN];
	/** C type : int */
	public int ulEnable;
	/** C type : int */
	public int ulStreamType;
	/** C type : int */
	public int ulTranType;
	/** C type : int */
	public int ulEnableJitterBuff;
	public tagVideoOutChannel() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulVoutChannelindex", "szVoutChannelDesc", "ulEnable", "ulStreamType", "ulTranType", "ulEnableJitterBuff");
	}
	/**
	 * @param ulVoutChannelindex C type : int<br>
	 * @param szVoutChannelDesc C type : CHAR[IMOS_DESC_LEN]<br>
	 * @param ulEnable C type : int<br>
	 * @param ulStreamType C type : int<br>
	 * @param ulTranType C type : int<br>
	 * @param ulEnableJitterBuff C type : int
	 */
	public tagVideoOutChannel(int ulVoutChannelindex, byte szVoutChannelDesc[], int ulEnable, int ulStreamType, int ulTranType, int ulEnableJitterBuff) {
		super();
		this.ulVoutChannelindex = ulVoutChannelindex;
		if ((szVoutChannelDesc.length != this.szVoutChannelDesc.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szVoutChannelDesc = szVoutChannelDesc;
		this.ulEnable = ulEnable;
		this.ulStreamType = ulStreamType;
		this.ulTranType = ulTranType;
		this.ulEnableJitterBuff = ulEnableJitterBuff;
	}
	public tagVideoOutChannel(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagVideoOutChannel implements Structure.ByReference {
		
	};
	public static class ByValue extends tagVideoOutChannel implements Structure.ByValue {
		
	};
}
