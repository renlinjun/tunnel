package com.burst.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
import static com.burst.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagVinChnlBindCamera extends Structure {
	/** C type : DEV_CHANNEL_INDEX_S */
	public TagDevChannelIndex stECChannelIndex;
	/** C type : CAMERA_INFO_S */
	public TagSCameraInfo stCameraInfo;
	/** C type : VIN_CHANNEL_S */
	public tagVideoInChannel stVinChannel;
	/** C type : OSD_INFO_S */
	public TagOsdInfo stOSDInfo;
	/** C type : int */
	public int ulVideoStreamNum;
	/** C type : VIDEO_STREAM_S[IMOS_STREAM_MAXNUM] */
	public tagVideoStream[] astVideoStream = new tagVideoStream[IMOS_STREAM_MAXNUM];
	/** C type : DETECT_AREA_S */
	public TagDetectArea stDetectArea;
	public tagVinChnlBindCamera() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("stECChannelIndex", "stCameraInfo", "stVinChannel", "stOSDInfo", "ulVideoStreamNum", "astVideoStream", "stDetectArea");
	}
	/**
	 * @param stECChannelIndex C type : DEV_CHANNEL_INDEX_S<br>
	 * @param stCameraInfo C type : CAMERA_INFO_S<br>
	 * @param stVinChannel C type : VIN_CHANNEL_S<br>
	 * @param stOSDInfo C type : OSD_INFO_S<br>
	 * @param ulVideoStreamNum C type : int<br>
	 * @param astVideoStream C type : VIDEO_STREAM_S[IMOS_STREAM_MAXNUM]<br>
	 * @param stDetectArea C type : DETECT_AREA_S
	 */
	public tagVinChnlBindCamera(TagDevChannelIndex stECChannelIndex, TagSCameraInfo stCameraInfo, tagVideoInChannel stVinChannel, TagOsdInfo stOSDInfo, int ulVideoStreamNum, tagVideoStream astVideoStream[], TagDetectArea stDetectArea) {
		super();
		this.stECChannelIndex = stECChannelIndex;
		this.stCameraInfo = stCameraInfo;
		this.stVinChannel = stVinChannel;
		this.stOSDInfo = stOSDInfo;
		this.ulVideoStreamNum = ulVideoStreamNum;
		if ((astVideoStream.length != this.astVideoStream.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astVideoStream = astVideoStream;
		this.stDetectArea = stDetectArea;
	}
	public tagVinChnlBindCamera(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagVinChnlBindCamera implements Structure.ByReference {
		
	};
	public static class ByValue extends tagVinChnlBindCamera implements Structure.ByValue {
		
	};
}
