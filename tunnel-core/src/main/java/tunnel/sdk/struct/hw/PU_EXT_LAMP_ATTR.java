package tunnel.sdk.struct.hw;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_EXT_LAMP_ATTR extends Structure {
	/**
	 * \u5916\u7f6e\u706f\u7c7b\u578b<br>
	 * C type : PU_EXT_LAMP_TYPE_E
	 */
	public int enExtLampType;
	/**
	 * \u66dd\u5149\u706f\u5c5e\u6027<br>
	 * C type : PU_EXPOSURE_LAMP_ATTR_S
	 */
	public ITS_EXPOSURE_LAMP_ATTR stExposureLampAttr;
	/**
	 * \u9891\u95ea\u706f\u5c5e\u6027<br>
	 * C type : PU_STROBE_LAMP_ATTR_S
	 */
	public PU_STROBE_LAMP_ATTR stStrobeLampAttr;
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_EXT_LAMP_ATTR() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("enExtLampType", "stExposureLampAttr", "stStrobeLampAttr", "szReserved");
	}
	/**
	 * @param enExtLampType \u5916\u7f6e\u706f\u7c7b\u578b<br>
	 * C type : PU_EXT_LAMP_TYPE_E<br>
	 * @param stExposureLampAttr \u66dd\u5149\u706f\u5c5e\u6027<br>
	 * C type : PU_EXPOSURE_LAMP_ATTR_S<br>
	 * @param stStrobeLampAttr \u9891\u95ea\u706f\u5c5e\u6027<br>
	 * C type : PU_STROBE_LAMP_ATTR_S<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_EXT_LAMP_ATTR(int enExtLampType, ITS_EXPOSURE_LAMP_ATTR stExposureLampAttr, PU_STROBE_LAMP_ATTR stStrobeLampAttr, byte szReserved[]) {
		super();
		this.enExtLampType = enExtLampType;
		this.stExposureLampAttr = stExposureLampAttr;
		this.stStrobeLampAttr = stStrobeLampAttr;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_EXT_LAMP_ATTR(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_EXT_LAMP_ATTR implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_EXT_LAMP_ATTR implements Structure.ByValue {
		
	};
}
