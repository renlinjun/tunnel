package tunnel.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import tunnel.sdk.library.HWPuSDKLibrary;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_IGT_TW_LINE extends Structure {
	/**
	 * \u68c0\u6d4b\u65b9\u5411: 0:both 1:Left->right 2:right->left<br>
	 * C type : UCHAR
	 */
	public HWPuSDKLibrary.UCHAR ucDirection;
	/**
	 * \u7eca\u7ebf\u8d77\u59cb\u70b9<br>
	 * C type : PU_IGT_POINT_S
	 */
	public PU_IGT_POINT stStartPoit;
	/**
	 * \u7eca\u7ebf\u7ec8\u6b62\u70b9<br>
	 * C type : PU_IGT_POINT_S
	 */
	public PU_IGT_POINT stEndPoit;
	/** \u7eca\u7ebf\u7d22\u5f15 */
	public NativeLong ulLineIndex;
	/** \u8be5\u7ebf\u662f\u5426\u4f7f\u80fd */
	public boolean bEnable;
	/**
	 * \u7eca\u7ebf\u540d\u79f0<br>
	 * C type : CHAR[(32 + 4)]
	 */
	public byte[] szLineName = new byte[32 + 4];
	public PU_IGT_TW_LINE() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ucDirection", "stStartPoit", "stEndPoit", "ulLineIndex", "bEnable", "szLineName");
	}
	/**
	 * @param ucDirection \u68c0\u6d4b\u65b9\u5411: 0:both 1:Left->right 2:right->left<br>
	 * C type : UCHAR<br>
	 * @param stStartPoit \u7eca\u7ebf\u8d77\u59cb\u70b9<br>
	 * C type : PU_IGT_POINT_S<br>
	 * @param stEndPoit \u7eca\u7ebf\u7ec8\u6b62\u70b9<br>
	 * C type : PU_IGT_POINT_S<br>
	 * @param ulLineIndex \u7eca\u7ebf\u7d22\u5f15<br>
	 * @param bEnable \u8be5\u7ebf\u662f\u5426\u4f7f\u80fd<br>
	 * @param szLineName \u7eca\u7ebf\u540d\u79f0<br>
	 * C type : CHAR[(32 + 4)]
	 */
	public PU_IGT_TW_LINE(HWPuSDKLibrary.UCHAR ucDirection, PU_IGT_POINT stStartPoit, PU_IGT_POINT stEndPoit, NativeLong ulLineIndex, boolean bEnable, byte szLineName[]) {
		super();
		this.ucDirection = ucDirection;
		this.stStartPoit = stStartPoit;
		this.stEndPoit = stEndPoit;
		this.ulLineIndex = ulLineIndex;
		this.bEnable = bEnable;
		if ((szLineName.length != this.szLineName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szLineName = szLineName;
	}
	public PU_IGT_TW_LINE(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_IGT_TW_LINE implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_IGT_TW_LINE implements Structure.ByValue {
		
	};
}
