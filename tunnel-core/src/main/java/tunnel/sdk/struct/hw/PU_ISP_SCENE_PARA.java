package tunnel.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_ISP_SCENE_PARA extends Structure {
	/** \u552f\u4e00\u6807\u8bc6 1-4\u662f\u57fa\u672c\u914d\u7f6e\u4e0d\u80fd\u5220\u9664,0\u6807\u793a\u4e0d\u5b58\u5728 */
	public NativeLong ulIndex;
	/**
	 * \u5178\u578b\u573a\u666f\u9910\u540d\u79f0\u540d\u79f0<br>
	 * C type : CHAR[(64 + 4)]
	 */
	public byte[] szName = new byte[64 + 4];
	/**
	 * \u63cf\u8ff0<br>
	 * C type : CHAR[128]
	 */
	public byte[] szDescrip = new byte[128];
	/**
	 * ISP\u53c2\u6570<br>
	 * C type : PU_ISP_PARTICULAR_PARA_S
	 */
	public PU_ISP_PARTICULAR_PARA stSceneModeISP;
	/**
	 * \u89c6\u9891\u6548\u679c<br>
	 * C type : PU_VIDEO_DISPLAY_INFO_S
	 */
	public PU_VIDEO_DISPLAY_INFO stVideoDisplayPara;
	/**
	 * \u7ea2\u5916\u706f\u8bbe\u7f6e<br>
	 * C type : PU_IRLIGHT_LIST_S
	 */
	public PU_IRLIGHT_LIST stIrLightArrayPara;
	/**
	 * \u9884\u7559\u5b57\u6bb5<br>
	 * C type : CHAR[32]
	 */
	public byte[] szReserved = new byte[32];
	public PU_ISP_SCENE_PARA() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulIndex", "szName", "szDescrip", "stSceneModeISP", "stVideoDisplayPara", "stIrLightArrayPara", "szReserved");
	}
	/**
	 * @param ulIndex \u552f\u4e00\u6807\u8bc6 1-4\u662f\u57fa\u672c\u914d\u7f6e\u4e0d\u80fd\u5220\u9664,0\u6807\u793a\u4e0d\u5b58\u5728<br>
	 * @param szName \u5178\u578b\u573a\u666f\u9910\u540d\u79f0\u540d\u79f0<br>
	 * C type : CHAR[(64 + 4)]<br>
	 * @param szDescrip \u63cf\u8ff0<br>
	 * C type : CHAR[128]<br>
	 * @param stSceneModeISP ISP\u53c2\u6570<br>
	 * C type : PU_ISP_PARTICULAR_PARA_S<br>
	 * @param stVideoDisplayPara \u89c6\u9891\u6548\u679c<br>
	 * C type : PU_VIDEO_DISPLAY_INFO_S<br>
	 * @param stIrLightArrayPara \u7ea2\u5916\u706f\u8bbe\u7f6e<br>
	 * C type : PU_IRLIGHT_LIST_S<br>
	 * @param szReserved \u9884\u7559\u5b57\u6bb5<br>
	 * C type : CHAR[32]
	 */
	public PU_ISP_SCENE_PARA(NativeLong ulIndex, byte szName[], byte szDescrip[], PU_ISP_PARTICULAR_PARA stSceneModeISP, PU_VIDEO_DISPLAY_INFO stVideoDisplayPara, PU_IRLIGHT_LIST stIrLightArrayPara, byte szReserved[]) {
		super();
		this.ulIndex = ulIndex;
		if ((szName.length != this.szName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szName = szName;
		if ((szDescrip.length != this.szDescrip.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDescrip = szDescrip;
		this.stSceneModeISP = stSceneModeISP;
		this.stVideoDisplayPara = stVideoDisplayPara;
		this.stIrLightArrayPara = stIrLightArrayPara;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_ISP_SCENE_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_ISP_SCENE_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_ISP_SCENE_PARA implements Structure.ByValue {
		
	};
}
