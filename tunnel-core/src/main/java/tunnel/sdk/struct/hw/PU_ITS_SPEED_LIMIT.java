package tunnel.sdk.struct.hw;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_ITS_SPEED_LIMIT extends Structure {
	/** \u5c0f\u8f66\u6807\u5fd7\u901f\u5ea6(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h) */
	public int iNormalSignSpeed;
	/** \u5c0f\u8f66\u9650\u5236\u4f4e\u901f(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h) */
	public int iNormalLowSpeed;
	/** \u5c0f\u8f66\u9650\u5236\u9ad8\u901f(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h) */
	public int iNormalHighSpeed;
	/** \u5927\u8f66\u6807\u5fd7\u901f\u5ea6(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h) */
	public int iBigVehicleSignSpeed;
	/** \u5927\u8f66\u9650\u5236\u4f4e\u901f(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h) */
	public int iBigVehicleLowSpeed;
	/** \u5927\u8f66\u9650\u5236\u9ad8\u901f(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h) */
	public int iBigVehicleHighSpeed;
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public PU_ITS_SPEED_LIMIT() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("iNormalSignSpeed", "iNormalLowSpeed", "iNormalHighSpeed", "iBigVehicleSignSpeed", "iBigVehicleLowSpeed", "iBigVehicleHighSpeed", "szReserve");
	}
	/**
	 * @param iNormalSignSpeed \u5c0f\u8f66\u6807\u5fd7\u901f\u5ea6(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h)<br>
	 * @param iNormalLowSpeed \u5c0f\u8f66\u9650\u5236\u4f4e\u901f(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h)<br>
	 * @param iNormalHighSpeed \u5c0f\u8f66\u9650\u5236\u9ad8\u901f(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h)<br>
	 * @param iBigVehicleSignSpeed \u5927\u8f66\u6807\u5fd7\u901f\u5ea6(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h)<br>
	 * @param iBigVehicleLowSpeed \u5927\u8f66\u9650\u5236\u4f4e\u901f(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h)<br>
	 * @param iBigVehicleHighSpeed \u5927\u8f66\u9650\u5236\u9ad8\u901f(\u9650\u901f\u503c\u8303\u56f4\u4e3a0~255km/h)<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public PU_ITS_SPEED_LIMIT(int iNormalSignSpeed, int iNormalLowSpeed, int iNormalHighSpeed, int iBigVehicleSignSpeed, int iBigVehicleLowSpeed, int iBigVehicleHighSpeed, byte szReserve[]) {
		super();
		this.iNormalSignSpeed = iNormalSignSpeed;
		this.iNormalLowSpeed = iNormalLowSpeed;
		this.iNormalHighSpeed = iNormalHighSpeed;
		this.iBigVehicleSignSpeed = iBigVehicleSignSpeed;
		this.iBigVehicleLowSpeed = iBigVehicleLowSpeed;
		this.iBigVehicleHighSpeed = iBigVehicleHighSpeed;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public PU_ITS_SPEED_LIMIT(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_ITS_SPEED_LIMIT implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_ITS_SPEED_LIMIT implements Structure.ByValue {
		
	};
}
