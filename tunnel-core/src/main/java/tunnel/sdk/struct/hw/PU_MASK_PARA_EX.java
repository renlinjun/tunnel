package tunnel.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import tunnel.sdk.library.HWPuSDKLibrary.UCHAR;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_MASK_PARA_EX extends Structure {
	/** \u9690\u79c1\u4fdd\u62a4\u77e9\u5f62\u5de6\u4e0a\u89d2X */
	public NativeLong ulStartX;
	/** \u9690\u79c1\u4fdd\u62a4\u77e9\u5f62\u5de6\u4e0a\u89d2Y */
	public NativeLong ulStartY;
	public NativeLong ulWidth;
	public NativeLong ulHeight;
	/** \u989c\u8272 */
	public NativeLong ulColor;
	/**
	 * \u900f\u660e\u5ea6\uff0c\u6682\u4e0d\u652f\u6301<br>
	 * C type : UCHAR
	 */
	public UCHAR ucAlpha;
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public PU_MASK_PARA_EX() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulStartX", "ulStartY", "ulWidth", "ulHeight", "ulColor", "ucAlpha", "szReserve");
	}
	/**
	 * @param ulStartX \u9690\u79c1\u4fdd\u62a4\u77e9\u5f62\u5de6\u4e0a\u89d2X<br>
	 * @param ulStartY \u9690\u79c1\u4fdd\u62a4\u77e9\u5f62\u5de6\u4e0a\u89d2Y<br>
	 * @param ulColor \u989c\u8272<br>
	 * @param ucAlpha \u900f\u660e\u5ea6\uff0c\u6682\u4e0d\u652f\u6301<br>
	 * C type : UCHAR<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public PU_MASK_PARA_EX(NativeLong ulStartX, NativeLong ulStartY, NativeLong ulWidth, NativeLong ulHeight, NativeLong ulColor, UCHAR ucAlpha, byte szReserve[]) {
		super();
		this.ulStartX = ulStartX;
		this.ulStartY = ulStartY;
		this.ulWidth = ulWidth;
		this.ulHeight = ulHeight;
		this.ulColor = ulColor;
		this.ucAlpha = ucAlpha;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public PU_MASK_PARA_EX(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_MASK_PARA_EX implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_MASK_PARA_EX implements Structure.ByValue {
		
	};
}
