package tunnel.sdk.struct.hw;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_ONVIF_PWD_PARA extends Structure {
	/** C type : CHAR[32] */
	public byte[] szUserName = new byte[32];
	/** C type : CHAR[(64 + 4)] */
	public byte[] szOldPassword = new byte[64 + 4];
	/** C type : CHAR[(64 + 4)] */
	public byte[] szNewPassword = new byte[64 + 4];
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public PU_ONVIF_PWD_PARA() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szUserName", "szOldPassword", "szNewPassword", "szReserve");
	}
	/**
	 * @param szUserName C type : CHAR[32]<br>
	 * @param szOldPassword C type : CHAR[(64 + 4)]<br>
	 * @param szNewPassword C type : CHAR[(64 + 4)]<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public PU_ONVIF_PWD_PARA(byte szUserName[], byte szOldPassword[], byte szNewPassword[], byte szReserve[]) {
		super();
		if ((szUserName.length != this.szUserName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szUserName = szUserName;
		if ((szOldPassword.length != this.szOldPassword.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOldPassword = szOldPassword;
		if ((szNewPassword.length != this.szNewPassword.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szNewPassword = szNewPassword;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public PU_ONVIF_PWD_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_ONVIF_PWD_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_ONVIF_PWD_PARA implements Structure.ByValue {
		
	};
}
