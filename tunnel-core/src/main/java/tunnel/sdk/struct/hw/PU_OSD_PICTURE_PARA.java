package tunnel.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_OSD_PICTURE_PARA extends Structure {
	public NativeLong ulChannelID;
	/** \u4f7f\u80fd\u4e0e\u5426 */
	public boolean bEnable;
	/**
	 * \u56fe\u7247\u533a\u57df\u4fe1\u606f<br>
	 * C type : PU_AREA_INFO_S
	 */
	public PU_AREA_INFO stAreaInfo;
	/**
	 * \u56fe\u7247\u7684\u8def\u5f84\u53ca\u540d\u79f0<br>
	 * C type : CHAR[128]
	 */
	public byte[] szPicFileName = new byte[128];
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public PU_OSD_PICTURE_PARA() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulChannelID", "bEnable", "stAreaInfo", "szPicFileName", "szReserve");
	}
	/**
	 * @param bEnable \u4f7f\u80fd\u4e0e\u5426<br>
	 * @param stAreaInfo \u56fe\u7247\u533a\u57df\u4fe1\u606f<br>
	 * C type : PU_AREA_INFO_S<br>
	 * @param szPicFileName \u56fe\u7247\u7684\u8def\u5f84\u53ca\u540d\u79f0<br>
	 * C type : CHAR[128]<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public PU_OSD_PICTURE_PARA(NativeLong ulChannelID, boolean bEnable, PU_AREA_INFO stAreaInfo, byte szPicFileName[], byte szReserve[]) {
		super();
		this.ulChannelID = ulChannelID;
		this.bEnable = bEnable;
		this.stAreaInfo = stAreaInfo;
		if ((szPicFileName.length != this.szPicFileName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szPicFileName = szPicFileName;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public PU_OSD_PICTURE_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_OSD_PICTURE_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_OSD_PICTURE_PARA implements Structure.ByValue {
		
	};
}
