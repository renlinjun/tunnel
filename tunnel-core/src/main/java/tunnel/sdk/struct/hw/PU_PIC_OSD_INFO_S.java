package tunnel.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import tunnel.sdk.library.HWPuSDKLibrary;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_PIC_OSD_INFO_S extends Structure {
	/** \u9700\u53e0\u52a0\u7684OSD\u6570\u76ee */
	public int uPicOSDNum;
	/**
	 * \u53e0\u52a0\u7684\u7c7b\u578b<br>
	 * C type : PU_PIC_OSD_TYPE_E[(15)]
	 */
	public int[] aenPicOSDType = new int[15];
	/**
	 * OSD\u53e0\u52a0\u4f4d\u7f6e<br>
	 * C type : PU_PIC_OSD_LOCATION_E
	 */
	public int enPicOSDLocation;
	/**
	 * @see PU_FONT_SIZE_E<br>
	 * \u5b57\u4f53\u5927\u5c0f<br>
	 * C type : PU_FONT_SIZE_E
	 */
	public int enFontSize;
	/** \u524d\u666f(\u6587\u5b57)\u8272\u5f69\u683c\u5f0f0xRRGGBB\u6216\u6362\u7b97\u6210\u5341\u8fdb\u5236 */
	public NativeLong ulFgColor;
	/**
	 * \u524d\u666f\uff08\u6587\u5b57\uff09\u900f\u660e\u5ea6 \u8303\u56f40~128<br>
	 * C type : UCHAR
	 */
	public HWPuSDKLibrary.UCHAR ucFgAlpha;
	/** \u80cc\u666f\u8272\u5f69 \u683c\u5f0f0xRRGGBB \u6216\u6362\u7b97\u6210\u5341\u8fdb\u5236 */
	public NativeLong ulBgColor;
	/**
	 * \u80cc\u666f\u900f\u660e\u5ea6 \u8303\u56f40~128(\u6d77\u601d)<br>
	 * C type : UCHAR
	 */
	public HWPuSDKLibrary.UCHAR ucBgAlpha;
	public PU_PIC_OSD_INFO_S() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("uPicOSDNum", "aenPicOSDType", "enPicOSDLocation", "enFontSize", "ulFgColor", "ucFgAlpha", "ulBgColor", "ucBgAlpha");
	}
	/**
	 * @param uPicOSDNum \u9700\u53e0\u52a0\u7684OSD\u6570\u76ee<br>
	 * @param aenPicOSDType \u53e0\u52a0\u7684\u7c7b\u578b<br>
	 * C type : PU_PIC_OSD_TYPE_E[(15)]<br>
	 * @param enPicOSDLocation OSD\u53e0\u52a0\u4f4d\u7f6e<br>
	 * C type : PU_PIC_OSD_LOCATION_E<br>
	 * @param enFontSize @see PU_FONT_SIZE_E<br>
	 * \u5b57\u4f53\u5927\u5c0f<br>
	 * C type : PU_FONT_SIZE_E<br>
	 * @param ulFgColor \u524d\u666f(\u6587\u5b57)\u8272\u5f69\u683c\u5f0f0xRRGGBB\u6216\u6362\u7b97\u6210\u5341\u8fdb\u5236<br>
	 * @param ucFgAlpha \u524d\u666f\uff08\u6587\u5b57\uff09\u900f\u660e\u5ea6 \u8303\u56f40~128<br>
	 * C type : UCHAR<br>
	 * @param ulBgColor \u80cc\u666f\u8272\u5f69 \u683c\u5f0f0xRRGGBB \u6216\u6362\u7b97\u6210\u5341\u8fdb\u5236<br>
	 * @param ucBgAlpha \u80cc\u666f\u900f\u660e\u5ea6 \u8303\u56f40~128(\u6d77\u601d)<br>
	 * C type : UCHAR
	 */
	public PU_PIC_OSD_INFO_S(int uPicOSDNum, int aenPicOSDType[], int enPicOSDLocation, int enFontSize, NativeLong ulFgColor, HWPuSDKLibrary.UCHAR ucFgAlpha, NativeLong ulBgColor, HWPuSDKLibrary.UCHAR ucBgAlpha) {
		super();
		this.uPicOSDNum = uPicOSDNum;
		if ((aenPicOSDType.length != this.aenPicOSDType.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.aenPicOSDType = aenPicOSDType;
		this.enPicOSDLocation = enPicOSDLocation;
		this.enFontSize = enFontSize;
		this.ulFgColor = ulFgColor;
		this.ucFgAlpha = ucFgAlpha;
		this.ulBgColor = ulBgColor;
		this.ucBgAlpha = ucBgAlpha;
	}
	public PU_PIC_OSD_INFO_S(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_PIC_OSD_INFO_S implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_PIC_OSD_INFO_S implements Structure.ByValue {
		
	};
}
