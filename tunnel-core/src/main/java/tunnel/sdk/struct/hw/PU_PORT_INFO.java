package tunnel.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_PORT_INFO extends Structure {
	/** \u4ea4\u7ec7\u7aef\u53e3 */
	public NativeLong ulInterLeavedPort;
	/** \u89c6\u9891RTP\u7aef\u53e3 */
	public NativeLong ulVideoRtpPort;
	/** \u89c6\u9891RTCP\u7aef\u53e3 */
	public NativeLong ulVideoRtcpPort;
	/** \u97f3\u9891RTP\u7aef\u53e3 */
	public NativeLong ulAudioRtpPort;
	/** \u97f3\u9891RTCP\u7aef\u53e3 */
	public NativeLong ulAudioRtcpPort;
	/** \u667a\u80fdRTP\u7aef\u53e3 */
	public NativeLong ulIgtRtpPort;
	/** \u667a\u80fdRTCP\u7aef\u53e3 */
	public NativeLong ulIgtRtcpPort;
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_PORT_INFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulInterLeavedPort", "ulVideoRtpPort", "ulVideoRtcpPort", "ulAudioRtpPort", "ulAudioRtcpPort", "ulIgtRtpPort", "ulIgtRtcpPort", "szReserved");
	}
	/**
	 * @param ulInterLeavedPort \u4ea4\u7ec7\u7aef\u53e3<br>
	 * @param ulVideoRtpPort \u89c6\u9891RTP\u7aef\u53e3<br>
	 * @param ulVideoRtcpPort \u89c6\u9891RTCP\u7aef\u53e3<br>
	 * @param ulAudioRtpPort \u97f3\u9891RTP\u7aef\u53e3<br>
	 * @param ulAudioRtcpPort \u97f3\u9891RTCP\u7aef\u53e3<br>
	 * @param ulIgtRtpPort \u667a\u80fdRTP\u7aef\u53e3<br>
	 * @param ulIgtRtcpPort \u667a\u80fdRTCP\u7aef\u53e3<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_PORT_INFO(NativeLong ulInterLeavedPort, NativeLong ulVideoRtpPort, NativeLong ulVideoRtcpPort, NativeLong ulAudioRtpPort, NativeLong ulAudioRtcpPort, NativeLong ulIgtRtpPort, NativeLong ulIgtRtcpPort, byte szReserved[]) {
		super();
		this.ulInterLeavedPort = ulInterLeavedPort;
		this.ulVideoRtpPort = ulVideoRtpPort;
		this.ulVideoRtcpPort = ulVideoRtcpPort;
		this.ulAudioRtpPort = ulAudioRtpPort;
		this.ulAudioRtcpPort = ulAudioRtcpPort;
		this.ulIgtRtpPort = ulIgtRtpPort;
		this.ulIgtRtcpPort = ulIgtRtcpPort;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_PORT_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_PORT_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_PORT_INFO implements Structure.ByValue {
		
	};
}
