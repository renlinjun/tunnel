package tunnel.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_PTZ_CRUISE_TRACK_PARA extends Structure {
	/** \u4e91\u53f0\u7f16\u53f7 */
	public NativeLong ulPtzId;
	/** \u5de1\u822a\u8f68\u8ff9\u7f16\u53f7 */
	public NativeLong ulCruiseTrackIndex;
	/** \u5de1\u822a\u6a21\u5f0f\uff081\uff1a\u8f68\u8ff9\u626b\u63cf\uff0c2\uff1a\u82b1\u6837\u626b\u63cf\uff09 */
	public NativeLong ulCruiseType;
	/**
	 * \u5de1\u822a\u8f68\u8ff9\u540d\u79f0<br>
	 * C type : CHAR[32]
	 */
	public byte[] szCuriseTrackName = new byte[32];
	/** \u8f68\u8ff9\u70b9\u4e2a\u6570 */
	public NativeLong ulPointNum;
	/**
	 * \u8f68\u8ff9\u70b9\u5217\u8868<br>
	 * C type : PU_CRUISE_POINT_S[32]
	 */
	public PU_CRUISE_POINT[] stCruisePoint = new PU_CRUISE_POINT[32];
	/**
	 * \u5de1\u822a\u8f68\u8ff9\u64cd\u4f5c\u547d\u4ee4\u5b57<br>
	 * C type : PU_PTZ_CRUISE_TRACK_E
	 */
	public int enPtzCruiseTrack;
	public PU_PTZ_CRUISE_TRACK_PARA() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulPtzId", "ulCruiseTrackIndex", "ulCruiseType", "szCuriseTrackName", "ulPointNum", "stCruisePoint", "enPtzCruiseTrack");
	}
	/**
	 * @param ulPtzId \u4e91\u53f0\u7f16\u53f7<br>
	 * @param ulCruiseTrackIndex \u5de1\u822a\u8f68\u8ff9\u7f16\u53f7<br>
	 * @param ulCruiseType \u5de1\u822a\u6a21\u5f0f\uff081\uff1a\u8f68\u8ff9\u626b\u63cf\uff0c2\uff1a\u82b1\u6837\u626b\u63cf\uff09<br>
	 * @param szCuriseTrackName \u5de1\u822a\u8f68\u8ff9\u540d\u79f0<br>
	 * C type : CHAR[32]<br>
	 * @param ulPointNum \u8f68\u8ff9\u70b9\u4e2a\u6570<br>
	 * @param stCruisePoint \u8f68\u8ff9\u70b9\u5217\u8868<br>
	 * C type : PU_CRUISE_POINT_S[32]<br>
	 * @param enPtzCruiseTrack \u5de1\u822a\u8f68\u8ff9\u64cd\u4f5c\u547d\u4ee4\u5b57<br>
	 * C type : PU_PTZ_CRUISE_TRACK_E
	 */
	public PU_PTZ_CRUISE_TRACK_PARA(NativeLong ulPtzId, NativeLong ulCruiseTrackIndex, NativeLong ulCruiseType, byte szCuriseTrackName[], NativeLong ulPointNum, PU_CRUISE_POINT stCruisePoint[], int enPtzCruiseTrack) {
		super();
		this.ulPtzId = ulPtzId;
		this.ulCruiseTrackIndex = ulCruiseTrackIndex;
		this.ulCruiseType = ulCruiseType;
		if ((szCuriseTrackName.length != this.szCuriseTrackName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCuriseTrackName = szCuriseTrackName;
		this.ulPointNum = ulPointNum;
		if ((stCruisePoint.length != this.stCruisePoint.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.stCruisePoint = stCruisePoint;
		this.enPtzCruiseTrack = enPtzCruiseTrack;
	}
	public PU_PTZ_CRUISE_TRACK_PARA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_PTZ_CRUISE_TRACK_PARA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_PTZ_CRUISE_TRACK_PARA implements Structure.ByValue {
		
	};
}
