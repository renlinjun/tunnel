package tunnel.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_PTZ_FOCUSAREA extends Structure {
	/** \u901a\u9053ID */
	public NativeLong ulChannelID;
	/**
	 * \u81ea\u52a8\u805a\u7126\u73af\u5883\u6570\u636e<br>
	 * C type : ULONG[15][17]
	 */
	public NativeLong[] ulFocusArea = new NativeLong[((15) * (17))];
	public PU_PTZ_FOCUSAREA() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulChannelID", "ulFocusArea");
	}
	/**
	 * @param ulChannelID \u901a\u9053ID<br>
	 * @param ulFocusArea \u81ea\u52a8\u805a\u7126\u73af\u5883\u6570\u636e<br>
	 * C type : ULONG[15][17]
	 */
	public PU_PTZ_FOCUSAREA(NativeLong ulChannelID, NativeLong ulFocusArea[]) {
		super();
		this.ulChannelID = ulChannelID;
		if ((ulFocusArea.length != this.ulFocusArea.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.ulFocusArea = ulFocusArea;
	}
	public PU_PTZ_FOCUSAREA(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_PTZ_FOCUSAREA implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_PTZ_FOCUSAREA implements Structure.ByValue {
		
	};
}
