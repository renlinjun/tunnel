package tunnel.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_STREAM_ABILITYV2 extends Structure {
	public NativeLong ulChannelId;
	/** C type : CHAR[32] */
	public byte[] szCameraName = new byte[32];
	public NativeLong ulPTZType;
	public NativeLong ulPresetNum;
	public NativeLong ulCruiseTrackNum;
	public NativeLong ulMaxStreamNum;
	public boolean bPtzFastLocate;
	public boolean bPtzHorizotalScan;
	public boolean bPtzVerticalScan;
	/** C type : PU_STREAM_ABILITY_PARA_S[5] */
	public PU_STREAM_ABILITY_PARA[] stStreamAbility = new PU_STREAM_ABILITY_PARA[5];
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_STREAM_ABILITYV2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulChannelId", "szCameraName", "ulPTZType", "ulPresetNum", "ulCruiseTrackNum", "ulMaxStreamNum", "bPtzFastLocate", "bPtzHorizotalScan", "bPtzVerticalScan", "stStreamAbility", "szReserved");
	}
	public PU_STREAM_ABILITYV2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_STREAM_ABILITYV2 implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_STREAM_ABILITYV2 implements Structure.ByValue {
		
	};
}
