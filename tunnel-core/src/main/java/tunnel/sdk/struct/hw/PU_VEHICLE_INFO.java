package tunnel.sdk.struct.hw;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_VEHICLE_INFO extends Structure {
	/**
	 * \u8f66\u8f86\u4f4d\u7f6e<br>
	 * C type : PU_AREA_INFO_S
	 */
	public PU_AREA_INFO stVehicleLoc;
	/**
	 * \u8f66\u8f86\u989c\u8272<br>
	 * C type : PU_VEHICLE_COLOR_E
	 */
	public int enVehicleColor;
	/**
	 * \u8f66\u8f86\u7c7b\u578b<br>
	 * C type : PU_VEHICLE_TYPE_E
	 */
	public int enVehicleType;
	/**
	 * \u8f66\u8138\u4f4d\u7f6e<br>
	 * C type : PU_AREA_INFO_S
	 */
	public PU_AREA_INFO stVehicleFaceLoc;
	/**
	 * \u9884\u7559\u5b57\u6bb5<br>
	 * C type : CHAR[64]
	 */
	public byte[] szReserved = new byte[64];
	public PU_VEHICLE_INFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("stVehicleLoc", "enVehicleColor", "enVehicleType", "stVehicleFaceLoc", "szReserved");
	}
	/**
	 * @param stVehicleLoc \u8f66\u8f86\u4f4d\u7f6e<br>
	 * C type : PU_AREA_INFO_S<br>
	 * @param enVehicleColor \u8f66\u8f86\u989c\u8272<br>
	 * C type : PU_VEHICLE_COLOR_E<br>
	 * @param enVehicleType \u8f66\u8f86\u7c7b\u578b<br>
	 * C type : PU_VEHICLE_TYPE_E<br>
	 * @param stVehicleFaceLoc \u8f66\u8138\u4f4d\u7f6e<br>
	 * C type : PU_AREA_INFO_S<br>
	 * @param szReserved \u9884\u7559\u5b57\u6bb5<br>
	 * C type : CHAR[64]
	 */
	public PU_VEHICLE_INFO(PU_AREA_INFO stVehicleLoc, int enVehicleColor, int enVehicleType, PU_AREA_INFO stVehicleFaceLoc, byte szReserved[]) {
		super();
		this.stVehicleLoc = stVehicleLoc;
		this.enVehicleColor = enVehicleColor;
		this.enVehicleType = enVehicleType;
		this.stVehicleFaceLoc = stVehicleFaceLoc;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_VEHICLE_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_VEHICLE_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_VEHICLE_INFO implements Structure.ByValue {
		
	};
}
