package tunnel.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_VIDEO_DISPLAY_INFO extends Structure {
	/** \u901a\u9053ID */
	public NativeLong ulChannelId;
	/** \u4eae\u5ea6 */
	public NativeLong lBrightValue;
	/** \u8272\u5ea6 */
	public NativeLong lHueValue;
	/** \u9971\u548c\u5ea6 */
	public NativeLong lSaturationValue;
	/** \u5bf9\u6bd4\u5ea6 */
	public NativeLong lContrastValue;
	/** \u9510\u5ea6 */
	public NativeLong lSharpValue;
	/** C type : CHAR[32] */
	public byte[] szReserved = new byte[32];
	public PU_VIDEO_DISPLAY_INFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulChannelId", "lBrightValue", "lHueValue", "lSaturationValue", "lContrastValue", "lSharpValue", "szReserved");
	}
	/**
	 * @param ulChannelId \u901a\u9053ID<br>
	 * @param lBrightValue \u4eae\u5ea6<br>
	 * @param lHueValue \u8272\u5ea6<br>
	 * @param lSaturationValue \u9971\u548c\u5ea6<br>
	 * @param lContrastValue \u5bf9\u6bd4\u5ea6<br>
	 * @param lSharpValue \u9510\u5ea6<br>
	 * @param szReserved C type : CHAR[32]
	 */
	public PU_VIDEO_DISPLAY_INFO(NativeLong ulChannelId, NativeLong lBrightValue, NativeLong lHueValue, NativeLong lSaturationValue, NativeLong lContrastValue, NativeLong lSharpValue, byte szReserved[]) {
		super();
		this.ulChannelId = ulChannelId;
		this.lBrightValue = lBrightValue;
		this.lHueValue = lHueValue;
		this.lSaturationValue = lSaturationValue;
		this.lContrastValue = lContrastValue;
		this.lSharpValue = lSharpValue;
		if ((szReserved.length != this.szReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserved = szReserved;
	}
	public PU_VIDEO_DISPLAY_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_VIDEO_DISPLAY_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_VIDEO_DISPLAY_INFO implements Structure.ByValue {
		
	};
}
