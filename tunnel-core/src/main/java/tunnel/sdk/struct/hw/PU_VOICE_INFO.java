package tunnel.sdk.struct.hw;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : D:\HWPuSDK.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PU_VOICE_INFO extends Structure {
	/** \u901a\u9053ID */
	public NativeLong ulChannelId;
	/**
	 * \u672c\u5730\u97f3\u9891IP<br>
	 * C type : CHAR[16]
	 */
	public byte[] szLocalAudioIp = new byte[16];
	/** \u662f\u5426\u5582\u6570\u636e(\u8bed\u97f3\u5bf9\u8bb2\uff1aTRUE\u65f6\u56de\u8c03\u51fd\u6570\u4e0d\u80fd\u4e3a\u7a7a\uff0cFLASE\u65f6\u56de\u8c03\u51fd\u6570\u5fc5\u987b\u4e3a\u7a7a) */
	public boolean bFeedAudioData;
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public PU_VOICE_INFO() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulChannelId", "szLocalAudioIp", "bFeedAudioData", "szReserve");
	}
	/**
	 * @param ulChannelId \u901a\u9053ID<br>
	 * @param szLocalAudioIp \u672c\u5730\u97f3\u9891IP<br>
	 * C type : CHAR[16]<br>
	 * @param bFeedAudioData \u662f\u5426\u5582\u6570\u636e(\u8bed\u97f3\u5bf9\u8bb2\uff1aTRUE\u65f6\u56de\u8c03\u51fd\u6570\u4e0d\u80fd\u4e3a\u7a7a\uff0cFLASE\u65f6\u56de\u8c03\u51fd\u6570\u5fc5\u987b\u4e3a\u7a7a)<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public PU_VOICE_INFO(NativeLong ulChannelId, byte szLocalAudioIp[], boolean bFeedAudioData, byte szReserve[]) {
		super();
		this.ulChannelId = ulChannelId;
		if ((szLocalAudioIp.length != this.szLocalAudioIp.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szLocalAudioIp = szLocalAudioIp;
		this.bFeedAudioData = bFeedAudioData;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public PU_VOICE_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends PU_VOICE_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends PU_VOICE_INFO implements Structure.ByValue {
		
	};
}
