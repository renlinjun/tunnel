package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

import static tunnel.sdk.constanst.IMOSDefLibrary.*;

/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagCameraPtzInfo extends Structure {
	/** C type : CHAR[IMOS_RES_CODE_LEN] */
	public byte[] szCameraCode = new byte[IMOS_RES_CODE_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szCameraName = new byte[IMOS_NAME_LEN];
	/** C type : int */
	public int ulCameraType;
	/** C type : CHAR[IMOS_DESC_LEN] */
	public byte[] szCameraDesc = new byte[IMOS_DESC_LEN];
	/** C type : CHAR[IMOS_STRING_LEN_32] */
	public byte[] szPtzProtocol = new byte[IMOS_STRING_LEN_32];
	/** C type : int */
	public int ulPtzAddrCode;
	/** C type : int */
	public int ulPtzID;
	/** C type : int */
	public int ulIsPassPTZCtroller;
	/** C type : CHAR[124] */
	public byte[] szReserv = new byte[124];
	public TagCameraPtzInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szCameraCode", "szCameraName", "ulCameraType", "szCameraDesc", "szPtzProtocol", "ulPtzAddrCode", "ulPtzID", "ulIsPassPTZCtroller", "szReserv");
	}
	/**
	 * @param szCameraCode C type : CHAR[IMOS_RES_CODE_LEN]<br>
	 * @param szCameraName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param ulCameraType C type : int<br>
	 * @param szCameraDesc C type : CHAR[IMOS_DESC_LEN]<br>
	 * @param szPtzProtocol C type : CHAR[IMOS_STRING_LEN_32]<br>
	 * @param ulPtzAddrCode C type : int<br>
	 * @param ulPtzID C type : int<br>
	 * @param ulIsPassPTZCtroller C type : int<br>
	 * @param szReserv C type : CHAR[124]
	 */
	public TagCameraPtzInfo(byte szCameraCode[], byte szCameraName[], int ulCameraType, byte szCameraDesc[], byte szPtzProtocol[], int ulPtzAddrCode, int ulPtzID, int ulIsPassPTZCtroller, byte szReserv[]) {
		super();
		if ((szCameraCode.length != this.szCameraCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCameraCode = szCameraCode;
		if ((szCameraName.length != this.szCameraName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCameraName = szCameraName;
		this.ulCameraType = ulCameraType;
		if ((szCameraDesc.length != this.szCameraDesc.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCameraDesc = szCameraDesc;
		if ((szPtzProtocol.length != this.szPtzProtocol.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szPtzProtocol = szPtzProtocol;
		this.ulPtzAddrCode = ulPtzAddrCode;
		this.ulPtzID = ulPtzID;
		this.ulIsPassPTZCtroller = ulIsPassPTZCtroller;
		if ((szReserv.length != this.szReserv.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserv = szReserv;
	}
	public TagCameraPtzInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagCameraPtzInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends TagCameraPtzInfo implements Structure.ByValue {
		
	};
}
