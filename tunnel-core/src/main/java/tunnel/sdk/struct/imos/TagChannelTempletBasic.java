package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
import static tunnel.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagChannelTempletBasic extends Structure {
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szTempletName = new byte[IMOS_NAME_LEN];
	/** C type : CHAR[IMOS_TIME_LEN] */
	public byte[] szLastUpdateTime = new byte[IMOS_TIME_LEN];
	public TagChannelTempletBasic() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szTempletName", "szLastUpdateTime");
	}
	/**
	 * @param szTempletName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param szLastUpdateTime C type : CHAR[IMOS_TIME_LEN]
	 */
	public TagChannelTempletBasic(byte szTempletName[], byte szLastUpdateTime[]) {
		super();
		if ((szTempletName.length != this.szTempletName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szTempletName = szTempletName;
		if ((szLastUpdateTime.length != this.szLastUpdateTime.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szLastUpdateTime = szLastUpdateTime;
	}
	public TagChannelTempletBasic(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagChannelTempletBasic implements Structure.ByReference {
		
	};
	public static class ByValue extends TagChannelTempletBasic implements Structure.ByValue {
		
	};
}
