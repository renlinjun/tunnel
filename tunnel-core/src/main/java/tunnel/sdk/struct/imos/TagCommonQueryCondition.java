package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

import static tunnel.sdk.constanst.SDKDef.IMOS_QUERY_ITEM_MAX_NUM;

/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagCommonQueryCondition extends Structure {
	/** C type : int */
	public int ulItemNum = 0;
	/** C type : QUERY_CONDITION_ITEM_S[IMOS_QUERY_ITEM_MAX_NUM] */
	public TagQueryConditionItem[] astQueryConditionList = new TagQueryConditionItem[IMOS_QUERY_ITEM_MAX_NUM];
	public TagCommonQueryCondition() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulItemNum", "astQueryConditionList");
	}
	/**
	 * @param ulItemNum C type : int<br>
	 * @param astQueryConditionList C type : QUERY_CONDITION_ITEM_S[IMOS_QUERY_ITEM_MAX_NUM]
	 */
	public TagCommonQueryCondition(int ulItemNum, TagQueryConditionItem astQueryConditionList[]) {
		super();
		this.ulItemNum = ulItemNum;
		if ((astQueryConditionList.length != this.astQueryConditionList.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astQueryConditionList = astQueryConditionList;
	}
	public TagCommonQueryCondition(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagCommonQueryCondition implements Structure.ByReference {
		
	};
	public static class ByValue extends TagCommonQueryCondition implements Structure.ByValue {
		
	};
}
