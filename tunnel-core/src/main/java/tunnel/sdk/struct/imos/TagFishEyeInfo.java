package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
import static tunnel.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagFishEyeInfo extends Structure {
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szFishEyeCode = new byte[IMOS_CODE_LEN];
	/** C type : int */
	public int ulFishEyeMode;
	/** C type : int */
	public int ulFishEyeInstallation;
	/** C type : int */
	public int ulFishEyeAngel;
	public TagFishEyeInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szFishEyeCode", "ulFishEyeMode", "ulFishEyeInstallation", "ulFishEyeAngel");
	}
	/**
	 * @param szFishEyeCode C type : CHAR[IMOS_CODE_LEN]<br>
	 * @param ulFishEyeMode C type : int<br>
	 * @param ulFishEyeInstallation C type : int<br>
	 * @param ulFishEyeAngel C type : int
	 */
	public TagFishEyeInfo(byte szFishEyeCode[], int ulFishEyeMode, int ulFishEyeInstallation, int ulFishEyeAngel) {
		super();
		if ((szFishEyeCode.length != this.szFishEyeCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szFishEyeCode = szFishEyeCode;
		this.ulFishEyeMode = ulFishEyeMode;
		this.ulFishEyeInstallation = ulFishEyeInstallation;
		this.ulFishEyeAngel = ulFishEyeAngel;
	}
	public TagFishEyeInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagFishEyeInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends TagFishEyeInfo implements Structure.ByValue {
		
	};
}
