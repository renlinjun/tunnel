package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
import static tunnel.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagOrgBasicInfo extends Structure {
	/** C type : CHAR[IMOS_DOMAIN_CODE_LEN] */
	public byte[] szOrgCode = new byte[IMOS_DOMAIN_CODE_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szOrgName = new byte[IMOS_NAME_LEN];
	/** C type : CHAR[IMOS_DOMAIN_CODE_LEN] */
	public byte[] szOrgParentCode = new byte[IMOS_DOMAIN_CODE_LEN];
	/** C type : int */
	public int ulOrgType;
	/** C type : int */
	public int ulIsLocalDomain;
	/** C type : CHAR[IMOS_DESC_LEN] */
	public byte[] szOrgDesc = new byte[IMOS_DESC_LEN];
	/** C type : CHAR[IMOS_STRING_LEN_256] */
	public byte[] szUserInfo = new byte[IMOS_STRING_LEN_256];
	public TagOrgBasicInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szOrgCode", "szOrgName", "szOrgParentCode", "ulOrgType", "ulIsLocalDomain", "szOrgDesc", "szUserInfo");
	}
	/**
	 * @param szOrgCode C type : CHAR[IMOS_DOMAIN_CODE_LEN]<br>
	 * @param szOrgName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param szOrgParentCode C type : CHAR[IMOS_DOMAIN_CODE_LEN]<br>
	 * @param ulOrgType C type : int<br>
	 * @param ulIsLocalDomain C type : int<br>
	 * @param szOrgDesc C type : CHAR[IMOS_DESC_LEN]<br>
	 * @param szUserInfo C type : CHAR[IMOS_STRING_LEN_256]
	 */
	public TagOrgBasicInfo(byte szOrgCode[], byte szOrgName[], byte szOrgParentCode[], int ulOrgType, int ulIsLocalDomain, byte szOrgDesc[], byte szUserInfo[]) {
		super();
		if ((szOrgCode.length != this.szOrgCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgCode = szOrgCode;
		if ((szOrgName.length != this.szOrgName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgName = szOrgName;
		if ((szOrgParentCode.length != this.szOrgParentCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgParentCode = szOrgParentCode;
		this.ulOrgType = ulOrgType;
		this.ulIsLocalDomain = ulIsLocalDomain;
		if ((szOrgDesc.length != this.szOrgDesc.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgDesc = szOrgDesc;
		if ((szUserInfo.length != this.szUserInfo.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szUserInfo = szUserInfo;
	}
	public TagOrgBasicInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagOrgBasicInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends TagOrgBasicInfo implements Structure.ByValue {
		
	};
}
