package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagPhyOutChannelParam extends Structure {
	/** C type : int */
	public int ulPhyoutMode;
	/** C type : int */
	public int ulDecodeFormat;
	/** C type : int */
	public int ulAudioFormat;
	/** C type : int */
	public int ulAudioTrack;
	/** C type : int */
	public int ulAudioEnabled;
	/** C type : int */
	public int ulVolume;
	/** C type : int */
	public int ulOutputIndex;
	public TagPhyOutChannelParam() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulPhyoutMode", "ulDecodeFormat", "ulAudioFormat", "ulAudioTrack", "ulAudioEnabled", "ulVolume", "ulOutputIndex");
	}
	/**
	 * @param ulPhyoutMode C type : int<br>
	 * @param ulDecodeFormat C type : int<br>
	 * @param ulAudioFormat C type : int<br>
	 * @param ulAudioTrack C type : int<br>
	 * @param ulAudioEnabled C type : int<br>
	 * @param ulVolume C type : int<br>
	 * @param ulOutputIndex C type : int
	 */
	public TagPhyOutChannelParam(int ulPhyoutMode, int ulDecodeFormat, int ulAudioFormat, int ulAudioTrack, int ulAudioEnabled, int ulVolume, int ulOutputIndex) {
		super();
		this.ulPhyoutMode = ulPhyoutMode;
		this.ulDecodeFormat = ulDecodeFormat;
		this.ulAudioFormat = ulAudioFormat;
		this.ulAudioTrack = ulAudioTrack;
		this.ulAudioEnabled = ulAudioEnabled;
		this.ulVolume = ulVolume;
		this.ulOutputIndex = ulOutputIndex;
	}
	public TagPhyOutChannelParam(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagPhyOutChannelParam implements Structure.ByReference {
		
	};
	public static class ByValue extends TagPhyOutChannelParam implements Structure.ByValue {
		
	};
}
