package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
import static tunnel.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TagPlanTimeForRes_V2 extends Structure {
	/** C type : PLAN_WEEKTIME_FOR_RES_V2_S[IMOS_WEEK_DAYS] */
	public tagPlanWeekTimeForResV2[] astPlanTime = new tagPlanWeekTimeForResV2[IMOS_WEEK_DAYS];
	/** C type : int */
	public int ulPlanExtTimeNum;
	/** C type : PLAN_EXTTIME_FOR_RES_V2_S[IMOS_EXCP_DAYS] */
	public TagPlanExtTimeForResV2[] astPlanExtTime = new TagPlanExtTimeForResV2[IMOS_EXCP_DAYS];
	public TagPlanTimeForRes_V2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("astPlanTime", "ulPlanExtTimeNum", "astPlanExtTime");
	}
	/**
	 * @param astPlanTime C type : PLAN_WEEKTIME_FOR_RES_V2_S[IMOS_WEEK_DAYS]<br>
	 * @param ulPlanExtTimeNum C type : int<br>
	 * @param astPlanExtTime C type : PLAN_EXTTIME_FOR_RES_V2_S[IMOS_EXCP_DAYS]
	 */
	public TagPlanTimeForRes_V2(tagPlanWeekTimeForResV2 astPlanTime[], int ulPlanExtTimeNum, TagPlanExtTimeForResV2 astPlanExtTime[]) {
		super();
		if ((astPlanTime.length != this.astPlanTime.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astPlanTime = astPlanTime;
		this.ulPlanExtTimeNum = ulPlanExtTimeNum;
		if ((astPlanExtTime.length != this.astPlanExtTime.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astPlanExtTime = astPlanExtTime;
	}
	public TagPlanTimeForRes_V2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends TagPlanTimeForRes_V2 implements Structure.ByReference {
		
	};
	public static class ByValue extends TagPlanTimeForRes_V2 implements Structure.ByValue {
		
	};
}
