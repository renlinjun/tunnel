package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import tunnel.sdk.constanst.IMOSDefLibrary;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagDMShareResInfo extends Structure {
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szResName = new byte[IMOSDefLibrary.IMOS_NAME_LEN];
	/** C type : int */
	public int ulCapacity;
	/** C type : int */
	public int ulStoreDevType;
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szStoreDevCode = new byte[IMOSDefLibrary.IMOS_CODE_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szStoreDevName = new byte[IMOSDefLibrary.IMOS_NAME_LEN];
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szDMDevCode = new byte[IMOSDefLibrary.IMOS_CODE_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szDMDevName = new byte[IMOSDefLibrary.IMOS_NAME_LEN];
	/** C type : CHAR[32] */
	public byte[] szReserve = new byte[32];
	public tagDMShareResInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szResName", "ulCapacity", "ulStoreDevType", "szStoreDevCode", "szStoreDevName", "szDMDevCode", "szDMDevName", "szReserve");
	}
	/**
	 * @param szResName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param ulCapacity C type : int<br>
	 * @param ulStoreDevType C type : int<br>
	 * @param szStoreDevCode C type : CHAR[IMOS_CODE_LEN]<br>
	 * @param szStoreDevName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param szDMDevCode C type : CHAR[IMOS_CODE_LEN]<br>
	 * @param szDMDevName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param szReserve C type : CHAR[32]
	 */
	public tagDMShareResInfo(byte szResName[], int ulCapacity, int ulStoreDevType, byte szStoreDevCode[], byte szStoreDevName[], byte szDMDevCode[], byte szDMDevName[], byte szReserve[]) {
		super();
		if ((szResName.length != this.szResName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szResName = szResName;
		this.ulCapacity = ulCapacity;
		this.ulStoreDevType = ulStoreDevType;
		if ((szStoreDevCode.length != this.szStoreDevCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szStoreDevCode = szStoreDevCode;
		if ((szStoreDevName.length != this.szStoreDevName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szStoreDevName = szStoreDevName;
		if ((szDMDevCode.length != this.szDMDevCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDMDevCode = szDMDevCode;
		if ((szDMDevName.length != this.szDMDevName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDMDevName = szDMDevName;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public tagDMShareResInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagDMShareResInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends tagDMShareResInfo implements Structure.ByValue {
		
	};
}
