package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import static tunnel.sdk.constanst.IMOSDefLibrary.*;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagShareAlarmOutInfo extends Structure {
	/** C type : CHAR[IMOS_DOMAIN_CODE_LEN] */
	public byte[] szExDomainCode = new byte[IMOS_DOMAIN_CODE_LEN];
	/** C type : int */
	public int bIsShared;
	/** C type : SHARE_ALARMOUT_BASE_S */
	public tagShareAlarmOutBase stShareAlmOutBaseInfo;
	public tagShareAlarmOutInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szExDomainCode", "bIsShared", "stShareAlmOutBaseInfo");
	}
	/**
	 * @param szExDomainCode C type : CHAR[IMOS_DOMAIN_CODE_LEN]<br>
	 * @param bIsShared C type : int<br>
	 * @param stShareAlmOutBaseInfo C type : SHARE_ALARMOUT_BASE_S
	 */
	public tagShareAlarmOutInfo(byte szExDomainCode[], int bIsShared, tagShareAlarmOutBase stShareAlmOutBaseInfo) {
		super();
		if ((szExDomainCode.length != this.szExDomainCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szExDomainCode = szExDomainCode;
		this.bIsShared = bIsShared;
		this.stShareAlmOutBaseInfo = stShareAlmOutBaseInfo;
	}
	public tagShareAlarmOutInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagShareAlarmOutInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends tagShareAlarmOutInfo implements Structure.ByValue {
		
	};
}
