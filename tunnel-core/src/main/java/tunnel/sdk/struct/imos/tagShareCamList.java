package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
import static tunnel.sdk.constanst.IMOSDefLibrary.*;
import static tunnel.sdk.constanst.SDKDef.IMOS_ONCE_SHARE_RES_MAXNUM;

/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagShareCamList extends Structure {
	/** C type : CHAR[IMOS_DOMAIN_CODE_LEN] */
	public byte[] szDomainCode = new byte[IMOS_DOMAIN_CODE_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szDomainName = new byte[IMOS_NAME_LEN];
	/** C type : int */
	public int ulOperType;
	/** C type : int */
	public int ulDevNum;
	/** C type : SHARE_CAM_INFO_S[IMOS_ONCE_SHARE_RES_MAXNUM] */
	public tagShareCamInfo[] astCamInfo = new tagShareCamInfo[IMOS_ONCE_SHARE_RES_MAXNUM];
	public tagShareCamList() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szDomainCode", "szDomainName", "ulOperType", "ulDevNum", "astCamInfo");
	}
	/**
	 * @param szDomainCode C type : CHAR[IMOS_DOMAIN_CODE_LEN]<br>
	 * @param szDomainName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param ulOperType C type : int<br>
	 * @param ulDevNum C type : int<br>
	 * @param astCamInfo C type : SHARE_CAM_INFO_S[IMOS_ONCE_SHARE_RES_MAXNUM]
	 */
	public tagShareCamList(byte szDomainCode[], byte szDomainName[], int ulOperType, int ulDevNum, tagShareCamInfo astCamInfo[]) {
		super();
		if ((szDomainCode.length != this.szDomainCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDomainCode = szDomainCode;
		if ((szDomainName.length != this.szDomainName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDomainName = szDomainName;
		this.ulOperType = ulOperType;
		this.ulDevNum = ulDevNum;
		if ((astCamInfo.length != this.astCamInfo.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.astCamInfo = astCamInfo;
	}
	public tagShareCamList(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagShareCamList implements Structure.ByReference {
		
	};
	public static class ByValue extends tagShareCamList implements Structure.ByValue {
		
	};
}
