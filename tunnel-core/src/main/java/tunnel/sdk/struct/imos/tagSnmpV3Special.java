package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
import static tunnel.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagSnmpV3Special extends Structure {
	/** C type : int */
	public int ulSecurityMode;
	/** C type : int */
	public int ulAuthScheme;
	/** C type : CHAR[IMOS_STRING_LEN_64] */
	public byte[] szAuthPassword = new byte[IMOS_STRING_LEN_64];
	/** C type : int */
	public int ulPrivScheme;
	/** C type : CHAR[IMOS_STRING_LEN_64] */
	public byte[] szPrivPassword = new byte[IMOS_STRING_LEN_64];
	public tagSnmpV3Special() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulSecurityMode", "ulAuthScheme", "szAuthPassword", "ulPrivScheme", "szPrivPassword");
	}
	/**
	 * @param ulSecurityMode C type : int<br>
	 * @param ulAuthScheme C type : int<br>
	 * @param szAuthPassword C type : CHAR[IMOS_STRING_LEN_64]<br>
	 * @param ulPrivScheme C type : int<br>
	 * @param szPrivPassword C type : CHAR[IMOS_STRING_LEN_64]
	 */
	public tagSnmpV3Special(int ulSecurityMode, int ulAuthScheme, byte szAuthPassword[], int ulPrivScheme, byte szPrivPassword[]) {
		super();
		this.ulSecurityMode = ulSecurityMode;
		this.ulAuthScheme = ulAuthScheme;
		if ((szAuthPassword.length != this.szAuthPassword.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szAuthPassword = szAuthPassword;
		this.ulPrivScheme = ulPrivScheme;
		if ((szPrivPassword.length != this.szPrivPassword.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szPrivPassword = szPrivPassword;
	}
	public tagSnmpV3Special(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagSnmpV3Special implements Structure.ByReference {
		
	};
	public static class ByValue extends tagSnmpV3Special implements Structure.ByValue {
		
	};
}
