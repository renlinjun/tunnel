package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import tunnel.sdk.constanst.IMOSDefLibrary;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagStorePlanBaseV2 extends Structure {
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szStorePlanName = new byte[IMOSDefLibrary.IMOS_NAME_LEN];
	/** C type : CHAR[IMOS_TIME_LEN] */
	public byte[] szPlanCreateTime = new byte[IMOSDefLibrary.IMOS_TIME_LEN];
	/** C type : int */
	public int ulPlanType;
	/** C type : CHAR[IMOS_DOMAIN_CODE_LEN] */
	public byte[] szOrgCode = new byte[IMOSDefLibrary.IMOS_DOMAIN_CODE_LEN];
	/** C type : CHAR[IMOS_DESC_LEN] */
	public byte[] szPlanDesc = new byte[IMOSDefLibrary.IMOS_DESC_LEN];
	/** C type : int */
	public int bIsDayStore;
	/** C type : int */
	public int ulStoreDays;
	/** C type : int */
	public int ulEnabledFlag;
	public tagStorePlanBaseV2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szStorePlanName", "szPlanCreateTime", "ulPlanType", "szOrgCode", "szPlanDesc", "bIsDayStore", "ulStoreDays", "ulEnabledFlag");
	}
	/**
	 * @param szStorePlanName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param szPlanCreateTime C type : CHAR[IMOS_TIME_LEN]<br>
	 * @param ulPlanType C type : int<br>
	 * @param szOrgCode C type : CHAR[IMOS_DOMAIN_CODE_LEN]<br>
	 * @param szPlanDesc C type : CHAR[IMOS_DESC_LEN]<br>
	 * @param bIsDayStore C type : int<br>
	 * @param ulStoreDays C type : int<br>
	 * @param ulEnabledFlag C type : int
	 */
	public tagStorePlanBaseV2(byte szStorePlanName[], byte szPlanCreateTime[], int ulPlanType, byte szOrgCode[], byte szPlanDesc[], int bIsDayStore, int ulStoreDays, int ulEnabledFlag) {
		super();
		if ((szStorePlanName.length != this.szStorePlanName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szStorePlanName = szStorePlanName;
		if ((szPlanCreateTime.length != this.szPlanCreateTime.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szPlanCreateTime = szPlanCreateTime;
		this.ulPlanType = ulPlanType;
		if ((szOrgCode.length != this.szOrgCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szOrgCode = szOrgCode;
		if ((szPlanDesc.length != this.szPlanDesc.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szPlanDesc = szPlanDesc;
		this.bIsDayStore = bIsDayStore;
		this.ulStoreDays = ulStoreDays;
		this.ulEnabledFlag = ulEnabledFlag;
	}
	public tagStorePlanBaseV2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagStorePlanBaseV2 implements Structure.ByReference {
		
	};
	public static class ByValue extends tagStorePlanBaseV2 implements Structure.ByValue {
		
	};
}
