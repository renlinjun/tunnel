package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import static tunnel.sdk.constanst.IMOSDefLibrary.*;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagStoreResQueryItem extends Structure {
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szCamName = new byte[IMOS_NAME_LEN];
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szCamCode = new byte[IMOS_CODE_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szStoreDevName = new byte[IMOS_NAME_LEN];
	/** C type : CHAR[IMOS_NAME_LEN] */
	public byte[] szDMName = new byte[IMOS_NAME_LEN];
	/** C type : int */
	public int bHasStorePlan;
	/** C type : CHAR[IMOS_CODE_LEN] */
	public byte[] szStorePlanCode = new byte[IMOS_CODE_LEN];
	/** C type : int */
	public int bPlanStatus;
	/** C type : int */
	public int ulResStatus;
	/** C type : int */
	public int ulPlanStoreStatus;
	public tagStoreResQueryItem() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szCamName", "szCamCode", "szStoreDevName", "szDMName", "bHasStorePlan", "szStorePlanCode", "bPlanStatus", "ulResStatus", "ulPlanStoreStatus");
	}
	/**
	 * @param szCamName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param szCamCode C type : CHAR[IMOS_CODE_LEN]<br>
	 * @param szStoreDevName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param szDMName C type : CHAR[IMOS_NAME_LEN]<br>
	 * @param bHasStorePlan C type : int<br>
	 * @param szStorePlanCode C type : CHAR[IMOS_CODE_LEN]<br>
	 * @param bPlanStatus C type : int<br>
	 * @param ulResStatus C type : int<br>
	 * @param ulPlanStoreStatus C type : int
	 */
	public tagStoreResQueryItem(byte szCamName[], byte szCamCode[], byte szStoreDevName[], byte szDMName[], int bHasStorePlan, byte szStorePlanCode[], int bPlanStatus, int ulResStatus, int ulPlanStoreStatus) {
		super();
		if ((szCamName.length != this.szCamName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCamName = szCamName;
		if ((szCamCode.length != this.szCamCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szCamCode = szCamCode;
		if ((szStoreDevName.length != this.szStoreDevName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szStoreDevName = szStoreDevName;
		if ((szDMName.length != this.szDMName.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szDMName = szDMName;
		this.bHasStorePlan = bHasStorePlan;
		if ((szStorePlanCode.length != this.szStorePlanCode.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szStorePlanCode = szStorePlanCode;
		this.bPlanStatus = bPlanStatus;
		this.ulResStatus = ulResStatus;
		this.ulPlanStoreStatus = ulPlanStoreStatus;
	}
	public tagStoreResQueryItem(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagStoreResQueryItem implements Structure.ByReference {
		
	};
	public static class ByValue extends tagStoreResQueryItem implements Structure.ByValue {
		
	};
}
