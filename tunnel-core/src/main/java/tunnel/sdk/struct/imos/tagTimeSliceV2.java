package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
import static tunnel.sdk.constanst.IMOSDefLibrary.*;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagTimeSliceV2 extends Structure {
	/** C type : CHAR[IMOS_TIME_LEN] */
	public byte[] szBeginTime = new byte[IMOS_TIME_LEN];
	/** C type : CHAR[IMOS_TIME_LEN] */
	public byte[] szEndTime = new byte[IMOS_TIME_LEN];
	/** C type : int */
	public int ulPlanStreamType;
	/** C type : int */
	public int ulRes1;
	/** C type : int */
	public int ulRes2;
	public tagTimeSliceV2() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("szBeginTime", "szEndTime", "ulPlanStreamType", "ulRes1", "ulRes2");
	}
	/**
	 * @param szBeginTime C type : CHAR[IMOS_TIME_LEN]<br>
	 * @param szEndTime C type : CHAR[IMOS_TIME_LEN]<br>
	 * @param ulPlanStreamType C type : int<br>
	 * @param ulRes1 C type : int<br>
	 * @param ulRes2 C type : int
	 */
	public tagTimeSliceV2(byte szBeginTime[], byte szEndTime[], int ulPlanStreamType, int ulRes1, int ulRes2) {
		super();
		if ((szBeginTime.length != this.szBeginTime.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szBeginTime = szBeginTime;
		if ((szEndTime.length != this.szEndTime.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szEndTime = szEndTime;
		this.ulPlanStreamType = ulPlanStreamType;
		this.ulRes1 = ulRes1;
		this.ulRes2 = ulRes2;
	}
	public tagTimeSliceV2(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagTimeSliceV2 implements Structure.ByReference {
		
	};
	public static class ByValue extends tagTimeSliceV2 implements Structure.ByValue {
		
	};
}
