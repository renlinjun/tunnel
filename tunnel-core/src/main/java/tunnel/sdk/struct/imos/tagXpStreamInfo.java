package tunnel.sdk.struct.imos;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : sdk_struct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tagXpStreamInfo extends Structure {
	/** C type : int */
	public int ulStreamType;
	/** C type : int */
	public int ulStreamTransProtocol;
	/** C type : int */
	public int ulStreamServerMode;
	/** C type : int */
	public int ulVoiceCommMode;
	/** C type : int */
	public int ulIsSession;
	/** C type : CHAR[24] */
	public byte[] szReserve = new byte[24];
	public tagXpStreamInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("ulStreamType", "ulStreamTransProtocol", "ulStreamServerMode", "ulVoiceCommMode", "ulIsSession", "szReserve");
	}
	/**
	 * @param ulStreamType C type : int<br>
	 * @param ulStreamTransProtocol C type : int<br>
	 * @param ulStreamServerMode C type : int<br>
	 * @param ulVoiceCommMode C type : int<br>
	 * @param ulIsSession C type : int<br>
	 * @param szReserve C type : CHAR[24]
	 */
	public tagXpStreamInfo(int ulStreamType, int ulStreamTransProtocol, int ulStreamServerMode, int ulVoiceCommMode, int ulIsSession, byte szReserve[]) {
		super();
		this.ulStreamType = ulStreamType;
		this.ulStreamTransProtocol = ulStreamTransProtocol;
		this.ulStreamServerMode = ulStreamServerMode;
		this.ulVoiceCommMode = ulVoiceCommMode;
		this.ulIsSession = ulIsSession;
		if ((szReserve.length != this.szReserve.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.szReserve = szReserve;
	}
	public tagXpStreamInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tagXpStreamInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends tagXpStreamInfo implements Structure.ByValue {
		
	};
}
